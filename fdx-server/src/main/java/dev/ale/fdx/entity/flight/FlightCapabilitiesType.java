//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.ExtensibleType;


/**
 * 
 *             The capabilities of the flight comprising of the: 
 *             a) presence of relevant serviceable equipment on board the aircraft; 
 *             b) equipment and capabilities commensurate with flight crew qualifications; and 
 *             c) where applicable, authorization from the appropriate authority. 
 *             [FIXM] 
 *          
 * 
 * <p>Java class for FlightCapabilitiesType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FlightCapabilitiesType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="communication" type="{http://www.fixm.aero/flight/4.1}CommunicationCapabilitiesType" minOccurs="0"/>
 *         &lt;element name="navigation" type="{http://www.fixm.aero/flight/4.1}NavigationCapabilitiesType" minOccurs="0"/>
 *         &lt;element name="surveillance" type="{http://www.fixm.aero/flight/4.1}SurveillanceCapabilitiesType" minOccurs="0"/>
 *         &lt;element name="survival" type="{http://www.fixm.aero/flight/4.1}SurvivalCapabilitiesType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="standardCapabilities" type="{http://www.fixm.aero/flight/4.1}StandardCapabilitiesIndicatorType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightCapabilitiesType", propOrder = {
    "communication",
    "navigation",
    "surveillance",
    "survival"
})
@Entity(name = "FlightCapabilitiesType")
@Table(name = "FLIGHTCAPABILITIESTYPE")
public class FlightCapabilitiesType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected CommunicationCapabilitiesType communication;
    protected NavigationCapabilitiesType navigation;
    protected SurveillanceCapabilitiesType surveillance;
    protected SurvivalCapabilitiesType survival;
    @XmlAttribute(name = "standardCapabilities")
    protected StandardCapabilitiesIndicatorType standardCapabilities;

    /**
     * Gets the value of the communication property.
     * 
     * @return
     *     possible object is
     *     {@link CommunicationCapabilitiesType }
     *     
     */
    @ManyToOne(targetEntity = CommunicationCapabilitiesType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "COMMUNICATION_FLIGHTCAPABILI_0")
    public CommunicationCapabilitiesType getCommunication() {
        return communication;
    }

    /**
     * Sets the value of the communication property.
     * 
     * @param value
     *     allowed object is
     *     {@link CommunicationCapabilitiesType }
     *     
     */
    public void setCommunication(CommunicationCapabilitiesType value) {
        this.communication = value;
    }

    /**
     * Gets the value of the navigation property.
     * 
     * @return
     *     possible object is
     *     {@link NavigationCapabilitiesType }
     *     
     */
    @ManyToOne(targetEntity = NavigationCapabilitiesType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAVIGATION_FLIGHTCAPABILITIE_0")
    public NavigationCapabilitiesType getNavigation() {
        return navigation;
    }

    /**
     * Sets the value of the navigation property.
     * 
     * @param value
     *     allowed object is
     *     {@link NavigationCapabilitiesType }
     *     
     */
    public void setNavigation(NavigationCapabilitiesType value) {
        this.navigation = value;
    }

    /**
     * Gets the value of the surveillance property.
     * 
     * @return
     *     possible object is
     *     {@link SurveillanceCapabilitiesType }
     *     
     */
    @ManyToOne(targetEntity = SurveillanceCapabilitiesType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SURVEILLANCE_FLIGHTCAPABILIT_0")
    public SurveillanceCapabilitiesType getSurveillance() {
        return surveillance;
    }

    /**
     * Sets the value of the surveillance property.
     * 
     * @param value
     *     allowed object is
     *     {@link SurveillanceCapabilitiesType }
     *     
     */
    public void setSurveillance(SurveillanceCapabilitiesType value) {
        this.surveillance = value;
    }

    /**
     * Gets the value of the survival property.
     * 
     * @return
     *     possible object is
     *     {@link SurvivalCapabilitiesType }
     *     
     */
    @ManyToOne(targetEntity = SurvivalCapabilitiesType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SURVIVAL_FLIGHTCAPABILITIEST_0")
    public SurvivalCapabilitiesType getSurvival() {
        return survival;
    }

    /**
     * Sets the value of the survival property.
     * 
     * @param value
     *     allowed object is
     *     {@link SurvivalCapabilitiesType }
     *     
     */
    public void setSurvival(SurvivalCapabilitiesType value) {
        this.survival = value;
    }

    /**
     * Gets the value of the standardCapabilities property.
     * 
     * @return
     *     possible object is
     *     {@link StandardCapabilitiesIndicatorType }
     *     
     */
    @Basic
    @Column(name = "STANDARDCAPABILITIES", length = 255)
    @Enumerated(EnumType.STRING)
    public StandardCapabilitiesIndicatorType getStandardCapabilities() {
        return standardCapabilities;
    }

    /**
     * Sets the value of the standardCapabilities property.
     * 
     * @param value
     *     allowed object is
     *     {@link StandardCapabilitiesIndicatorType }
     *     
     */
    public void setStandardCapabilities(StandardCapabilitiesIndicatorType value) {
        this.standardCapabilities = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FlightCapabilitiesType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final FlightCapabilitiesType that = ((FlightCapabilitiesType) object);
        {
            CommunicationCapabilitiesType lhsCommunication;
            lhsCommunication = this.getCommunication();
            CommunicationCapabilitiesType rhsCommunication;
            rhsCommunication = that.getCommunication();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "communication", lhsCommunication), LocatorUtils.property(thatLocator, "communication", rhsCommunication), lhsCommunication, rhsCommunication)) {
                return false;
            }
        }
        {
            NavigationCapabilitiesType lhsNavigation;
            lhsNavigation = this.getNavigation();
            NavigationCapabilitiesType rhsNavigation;
            rhsNavigation = that.getNavigation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "navigation", lhsNavigation), LocatorUtils.property(thatLocator, "navigation", rhsNavigation), lhsNavigation, rhsNavigation)) {
                return false;
            }
        }
        {
            SurveillanceCapabilitiesType lhsSurveillance;
            lhsSurveillance = this.getSurveillance();
            SurveillanceCapabilitiesType rhsSurveillance;
            rhsSurveillance = that.getSurveillance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "surveillance", lhsSurveillance), LocatorUtils.property(thatLocator, "surveillance", rhsSurveillance), lhsSurveillance, rhsSurveillance)) {
                return false;
            }
        }
        {
            SurvivalCapabilitiesType lhsSurvival;
            lhsSurvival = this.getSurvival();
            SurvivalCapabilitiesType rhsSurvival;
            rhsSurvival = that.getSurvival();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "survival", lhsSurvival), LocatorUtils.property(thatLocator, "survival", rhsSurvival), lhsSurvival, rhsSurvival)) {
                return false;
            }
        }
        {
            StandardCapabilitiesIndicatorType lhsStandardCapabilities;
            lhsStandardCapabilities = this.getStandardCapabilities();
            StandardCapabilitiesIndicatorType rhsStandardCapabilities;
            rhsStandardCapabilities = that.getStandardCapabilities();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "standardCapabilities", lhsStandardCapabilities), LocatorUtils.property(thatLocator, "standardCapabilities", rhsStandardCapabilities), lhsStandardCapabilities, rhsStandardCapabilities)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CommunicationCapabilitiesType theCommunication;
            theCommunication = this.getCommunication();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "communication", theCommunication), currentHashCode, theCommunication);
        }
        {
            NavigationCapabilitiesType theNavigation;
            theNavigation = this.getNavigation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "navigation", theNavigation), currentHashCode, theNavigation);
        }
        {
            SurveillanceCapabilitiesType theSurveillance;
            theSurveillance = this.getSurveillance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "surveillance", theSurveillance), currentHashCode, theSurveillance);
        }
        {
            SurvivalCapabilitiesType theSurvival;
            theSurvival = this.getSurvival();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "survival", theSurvival), currentHashCode, theSurvival);
        }
        {
            StandardCapabilitiesIndicatorType theStandardCapabilities;
            theStandardCapabilities = this.getStandardCapabilities();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "standardCapabilities", theStandardCapabilities), currentHashCode, theStandardCapabilities);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
