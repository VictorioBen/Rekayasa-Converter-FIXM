//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OrderColumn;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlType;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.AerodromeReferenceType;
import dev.ale.fdx.entity.base.ExtensibleType;


/**
 * 
 *             The serviceable Secondary Surveillance Radar (SSR) and/or Automatic Dependent Surveillance 
 *             (ADS) equipment available on the aircraft at the time of flight that may be used 
 *             to identify and/or locate the aircraft. [FIXM] 
 *          
 * 
 * <p>Java class for SurveillanceCapabilitiesType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SurveillanceCapabilitiesType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="surveillanceCapabilityCode" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;list itemType="{http://www.fixm.aero/flight/4.1}SurveillanceCapabilityCodeType" />
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="otherSurveillanceCapabilities" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SurveillanceCapabilitiesType", propOrder = {
		"surveillanceCapabilityCode"
})
@Entity(name = "SurveillanceCapabilitiesType")
@Table(name = "SURVEILLANCECAPABILITIESTYPE")
public class SurveillanceCapabilitiesType
extends ExtensibleType
implements Equals, HashCode
{

	@XmlList
	protected List<SurveillanceCapabilityCodeType> surveillanceCapabilityCode;
	@XmlAttribute(name = "otherSurveillanceCapabilities")
	protected String otherSurveillanceCapabilities;

	/**
	 * Gets the value of the surveillanceCapabilityCode property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list,
	 * not a snapshot. Therefore any modification you make to the
	 * returned list will be present inside the JAXB object.
	 * This is why there is not a <CODE>set</CODE> method for the surveillanceCapabilityCode property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * <pre>
	 *    getSurveillanceCapabilityCode().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link SurveillanceCapabilityCodeType }
	 * 
	 * 
	 */
	@ElementCollection
	@OrderColumn(name = "HJINDEX")
	@Column(name = "HJVALUE")
	@Enumerated(EnumType.STRING)
	@CollectionTable(name = "SURVEILLANCECAPABILITIESTYPE_0", joinColumns = {
			@JoinColumn(name = "HJID")
	})
	public List<SurveillanceCapabilityCodeType> getSurveillanceCapabilityCode() {
		if (surveillanceCapabilityCode == null) {
			surveillanceCapabilityCode = new ArrayList<SurveillanceCapabilityCodeType>();
		}
		return this.surveillanceCapabilityCode;
	}

	/**
	 * 
	 * 
	 */
	public void setSurveillanceCapabilityCode(List<SurveillanceCapabilityCodeType> surveillanceCapabilityCode) {
		this.surveillanceCapabilityCode = surveillanceCapabilityCode;
	}

	/**
	 * Gets the value of the otherSurveillanceCapabilities property.
	 * 
	 * @return
	 *     possible object is
	 *     {@link String }
	 *     
	 */
	@Basic
	@Column(name = "OTHERSURVEILLANCECAPABILITIES", length = 4096)
	public String getOtherSurveillanceCapabilities() {
		return otherSurveillanceCapabilities;
	}

	/**
	 * Sets the value of the otherSurveillanceCapabilities property.
	 * 
	 * @param value
	 *     allowed object is
	 *     {@link String }
	 *     
	 */
	public void setOtherSurveillanceCapabilities(String value) {
		this.otherSurveillanceCapabilities = value;
	}

	public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
		if (!(object instanceof SurveillanceCapabilitiesType)) {
			return false;
		}
		if (this == object) {
			return true;
		}
		if (!super.equals(thisLocator, thatLocator, object, strategy)) {
			return false;
		}
		final SurveillanceCapabilitiesType that = ((SurveillanceCapabilitiesType) object);
		{
			List<SurveillanceCapabilityCodeType> lhsSurveillanceCapabilityCode;
			lhsSurveillanceCapabilityCode = (((this.surveillanceCapabilityCode!= null)&&(!this.surveillanceCapabilityCode.isEmpty()))?this.getSurveillanceCapabilityCode():null);
			List<SurveillanceCapabilityCodeType> rhsSurveillanceCapabilityCode;
			rhsSurveillanceCapabilityCode = (((that.surveillanceCapabilityCode!= null)&&(!that.surveillanceCapabilityCode.isEmpty()))?that.getSurveillanceCapabilityCode():null);
			if (!strategy.equals(LocatorUtils.property(thisLocator, "surveillanceCapabilityCode", lhsSurveillanceCapabilityCode), LocatorUtils.property(thatLocator, "surveillanceCapabilityCode", rhsSurveillanceCapabilityCode), lhsSurveillanceCapabilityCode, rhsSurveillanceCapabilityCode)) {
				return false;
			}
		}
		{
			String lhsOtherSurveillanceCapabilities;
			lhsOtherSurveillanceCapabilities = this.getOtherSurveillanceCapabilities();
			String rhsOtherSurveillanceCapabilities;
			rhsOtherSurveillanceCapabilities = that.getOtherSurveillanceCapabilities();
			if (!strategy.equals(LocatorUtils.property(thisLocator, "otherSurveillanceCapabilities", lhsOtherSurveillanceCapabilities), LocatorUtils.property(thatLocator, "otherSurveillanceCapabilities", rhsOtherSurveillanceCapabilities), lhsOtherSurveillanceCapabilities, rhsOtherSurveillanceCapabilities)) {
				return false;
			}
		}
		return true;
	}

	public boolean equals(Object object) {
		final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
		return equals(null, null, object, strategy);
	}

	public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
		int currentHashCode = super.hashCode(locator, strategy);
		{
			List<SurveillanceCapabilityCodeType> theSurveillanceCapabilityCode;
			theSurveillanceCapabilityCode = (((this.surveillanceCapabilityCode!= null)&&(!this.surveillanceCapabilityCode.isEmpty()))?this.getSurveillanceCapabilityCode():null);
			currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "surveillanceCapabilityCode", theSurveillanceCapabilityCode), currentHashCode, theSurveillanceCapabilityCode);
		}
		{
			String theOtherSurveillanceCapabilities;
			theOtherSurveillanceCapabilities = this.getOtherSurveillanceCapabilities();
			currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherSurveillanceCapabilities", theOtherSurveillanceCapabilities), currentHashCode, theOtherSurveillanceCapabilities);
		}
		return currentHashCode;
	}

	public int hashCode() {
		final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
		return this.hashCode(null, strategy);
	}

}
