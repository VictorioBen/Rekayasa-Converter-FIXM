//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.base;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OrderColumn;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 *             A choice between a predefined colour code or any other colour. [FIXM] 
 *          
 * 
 * <p>Java class for ColourChoiceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ColourChoiceType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;choice>
 *         &lt;element name="colourCode" type="{http://www.fixm.aero/base/4.1}ColourCodeType" maxOccurs="2000" minOccurs="0"/>
 *         &lt;element name="otherColour" type="{http://www.fixm.aero/base/4.1}CharacterStringType" minOccurs="0"/>
 *       &lt;/choice>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ColourChoiceType", propOrder = {
    "colourCode",
    "otherColour"
})
@Entity(name = "ColourChoiceType")
@Table(name = "COLOURCHOICETYPE")
public class ColourChoiceType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected List<ColourCodeType> colourCode;
    protected String otherColour;

    /**
     * Gets the value of the colourCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the colourCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getColourCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ColourCodeType }
     * 
     * 
     */
   
    @ElementCollection
    @OrderColumn(name = "HJINDEX")
    @Column(name = "HJVALUE", length = 255)
    @Enumerated(EnumType.STRING)
    @CollectionTable(name = "COLOURCHOICETYPE_COLOURCODE", joinColumns = {
        @JoinColumn(name = "HJID")
    })
    @LazyCollection(LazyCollectionOption.FALSE)
    public List<ColourCodeType> getColourCode() {
        if (colourCode == null) {
            colourCode = new ArrayList<ColourCodeType>();
        }
        return this.colourCode;
    }

    /**
     * 
     * 
     */
    public void setColourCode(List<ColourCodeType> colourCode) {
        this.colourCode = colourCode;
    }

    /**
     * Gets the value of the otherColour property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHERCOLOUR", length = 4096)
    public String getOtherColour() {
        return otherColour;
    }

    /**
     * Sets the value of the otherColour property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherColour(String value) {
        this.otherColour = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ColourChoiceType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ColourChoiceType that = ((ColourChoiceType) object);
        {
            List<ColourCodeType> lhsColourCode;
            lhsColourCode = (((this.colourCode!= null)&&(!this.colourCode.isEmpty()))?this.getColourCode():null);
            List<ColourCodeType> rhsColourCode;
            rhsColourCode = (((that.colourCode!= null)&&(!that.colourCode.isEmpty()))?that.getColourCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "colourCode", lhsColourCode), LocatorUtils.property(thatLocator, "colourCode", rhsColourCode), lhsColourCode, rhsColourCode)) {
                return false;
            }
        }
        {
            String lhsOtherColour;
            lhsOtherColour = this.getOtherColour();
            String rhsOtherColour;
            rhsOtherColour = that.getOtherColour();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherColour", lhsOtherColour), LocatorUtils.property(thatLocator, "otherColour", rhsOtherColour), lhsOtherColour, rhsOtherColour)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<ColourCodeType> theColourCode;
            theColourCode = (((this.colourCode!= null)&&(!this.colourCode.isEmpty()))?this.getColourCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "colourCode", theColourCode), currentHashCode, theColourCode);
        }
        {
            String theOtherColour;
            theOtherColour = this.getOtherColour();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherColour", theOtherColour), currentHashCode, theOtherColour);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
