//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OrderColumn;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlType;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.AerodromeReferenceType;
import dev.ale.fdx.entity.base.ExtensibleType;


/**
 * 
 *             The serviceable communications equipment, available on the aircraft at the time of 
 *             flight, and associated flight crew qualifications that may be used to communicate 
 *             with ATS units. [FIXM] 
 *          
 * 
 * <p>Java class for CommunicationCapabilitiesType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CommunicationCapabilitiesType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="communicationCapabilityCode" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;list itemType="{http://www.fixm.aero/flight/4.1}CommunicationCapabilityCodeType" />
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="datalinkCommunicationCapabilityCode" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;list itemType="{http://www.fixm.aero/flight/4.1}DatalinkCommunicationCapabilityCodeType" />
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="otherCommunicationCapabilities" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="otherDatalinkCapabilities" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="selectiveCallingCode" type="{http://www.fixm.aero/flight/4.1}SelectiveCallingCodeType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CommunicationCapabilitiesType", propOrder = {
    "communicationCapabilityCode",
    "datalinkCommunicationCapabilityCode"
})
@Entity(name = "CommunicationCapabilitiesType")
@Table(name = "COMMUNICATIONCAPABILITIESTYPE")
public class CommunicationCapabilitiesType
    extends ExtensibleType
    implements Equals, HashCode
{

    @XmlList
    protected List<CommunicationCapabilityCodeType> communicationCapabilityCode;
    @XmlList
    protected List<DatalinkCommunicationCapabilityCodeType> datalinkCommunicationCapabilityCode;
    @XmlAttribute(name = "otherCommunicationCapabilities")
    protected String otherCommunicationCapabilities;
    @XmlAttribute(name = "otherDatalinkCapabilities")
    protected String otherDatalinkCapabilities;
    @XmlAttribute(name = "selectiveCallingCode")
    protected String selectiveCallingCode;

    /**
     * Gets the value of the communicationCapabilityCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the communicationCapabilityCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCommunicationCapabilityCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CommunicationCapabilityCodeType }
     * 
     * 
     */
    @ElementCollection
    @OrderColumn(name = "HJINDEX")
    @Column(name = "HJVALUE")
    @Enumerated(EnumType.STRING)
    @CollectionTable(name = "COMMUNICATIONCAPABILITIESTYP_0", joinColumns = {
        @JoinColumn(name = "HJID")
        
    })
    public List<CommunicationCapabilityCodeType> getCommunicationCapabilityCode() {
        if (communicationCapabilityCode == null) {
            communicationCapabilityCode = new ArrayList<CommunicationCapabilityCodeType>();
        }
        return this.communicationCapabilityCode;
    }

    /**
     * 
     * 
     */
    public void setCommunicationCapabilityCode(List<CommunicationCapabilityCodeType> communicationCapabilityCode) {
        this.communicationCapabilityCode = communicationCapabilityCode;
    }

    /**
     * Gets the value of the datalinkCommunicationCapabilityCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the datalinkCommunicationCapabilityCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDatalinkCommunicationCapabilityCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DatalinkCommunicationCapabilityCodeType }
     * 
     * 
     */
    
    @ElementCollection
    @OrderColumn(name = "HJINDEX")
    @Column(name = "HJVALUE")
    @Enumerated(EnumType.STRING)
    @CollectionTable(name = "COMMUNICATIONCAPABILITIESTYP_1", joinColumns = {
        @JoinColumn(name = "HJID")
    })
    public List<DatalinkCommunicationCapabilityCodeType> getDatalinkCommunicationCapabilityCode() {
        if (datalinkCommunicationCapabilityCode == null) {
            datalinkCommunicationCapabilityCode = new ArrayList<DatalinkCommunicationCapabilityCodeType>();
        }
        return this.datalinkCommunicationCapabilityCode;
    }

    /**
     * 
     * 
     */
    public void setDatalinkCommunicationCapabilityCode(List<DatalinkCommunicationCapabilityCodeType> datalinkCommunicationCapabilityCode) {
        this.datalinkCommunicationCapabilityCode = datalinkCommunicationCapabilityCode;
    }

    /**
     * Gets the value of the otherCommunicationCapabilities property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHERCOMMUNICATIONCAPABILITI_0", length = 4096)
    public String getOtherCommunicationCapabilities() {
        return otherCommunicationCapabilities;
    }

    /**
     * Sets the value of the otherCommunicationCapabilities property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherCommunicationCapabilities(String value) {
        this.otherCommunicationCapabilities = value;
    }

    /**
     * Gets the value of the otherDatalinkCapabilities property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHERDATALINKCAPABILITIES", length = 4096)
    public String getOtherDatalinkCapabilities() {
        return otherDatalinkCapabilities;
    }

    /**
     * Sets the value of the otherDatalinkCapabilities property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherDatalinkCapabilities(String value) {
        this.otherDatalinkCapabilities = value;
    }

    /**
     * Gets the value of the selectiveCallingCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SELECTIVECALLINGCODE", length = 4096)
    public String getSelectiveCallingCode() {
        return selectiveCallingCode;
    }

    /**
     * Sets the value of the selectiveCallingCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSelectiveCallingCode(String value) {
        this.selectiveCallingCode = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CommunicationCapabilitiesType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CommunicationCapabilitiesType that = ((CommunicationCapabilitiesType) object);
        {
            List<CommunicationCapabilityCodeType> lhsCommunicationCapabilityCode;
            lhsCommunicationCapabilityCode = (((this.communicationCapabilityCode!= null)&&(!this.communicationCapabilityCode.isEmpty()))?this.getCommunicationCapabilityCode():null);
            List<CommunicationCapabilityCodeType> rhsCommunicationCapabilityCode;
            rhsCommunicationCapabilityCode = (((that.communicationCapabilityCode!= null)&&(!that.communicationCapabilityCode.isEmpty()))?that.getCommunicationCapabilityCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "communicationCapabilityCode", lhsCommunicationCapabilityCode), LocatorUtils.property(thatLocator, "communicationCapabilityCode", rhsCommunicationCapabilityCode), lhsCommunicationCapabilityCode, rhsCommunicationCapabilityCode)) {
                return false;
            }
        }
        {
            List<DatalinkCommunicationCapabilityCodeType> lhsDatalinkCommunicationCapabilityCode;
            lhsDatalinkCommunicationCapabilityCode = (((this.datalinkCommunicationCapabilityCode!= null)&&(!this.datalinkCommunicationCapabilityCode.isEmpty()))?this.getDatalinkCommunicationCapabilityCode():null);
            List<DatalinkCommunicationCapabilityCodeType> rhsDatalinkCommunicationCapabilityCode;
            rhsDatalinkCommunicationCapabilityCode = (((that.datalinkCommunicationCapabilityCode!= null)&&(!that.datalinkCommunicationCapabilityCode.isEmpty()))?that.getDatalinkCommunicationCapabilityCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "datalinkCommunicationCapabilityCode", lhsDatalinkCommunicationCapabilityCode), LocatorUtils.property(thatLocator, "datalinkCommunicationCapabilityCode", rhsDatalinkCommunicationCapabilityCode), lhsDatalinkCommunicationCapabilityCode, rhsDatalinkCommunicationCapabilityCode)) {
                return false;
            }
        }
        {
            String lhsOtherCommunicationCapabilities;
            lhsOtherCommunicationCapabilities = this.getOtherCommunicationCapabilities();
            String rhsOtherCommunicationCapabilities;
            rhsOtherCommunicationCapabilities = that.getOtherCommunicationCapabilities();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherCommunicationCapabilities", lhsOtherCommunicationCapabilities), LocatorUtils.property(thatLocator, "otherCommunicationCapabilities", rhsOtherCommunicationCapabilities), lhsOtherCommunicationCapabilities, rhsOtherCommunicationCapabilities)) {
                return false;
            }
        }
        {
            String lhsOtherDatalinkCapabilities;
            lhsOtherDatalinkCapabilities = this.getOtherDatalinkCapabilities();
            String rhsOtherDatalinkCapabilities;
            rhsOtherDatalinkCapabilities = that.getOtherDatalinkCapabilities();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherDatalinkCapabilities", lhsOtherDatalinkCapabilities), LocatorUtils.property(thatLocator, "otherDatalinkCapabilities", rhsOtherDatalinkCapabilities), lhsOtherDatalinkCapabilities, rhsOtherDatalinkCapabilities)) {
                return false;
            }
        }
        {
            String lhsSelectiveCallingCode;
            lhsSelectiveCallingCode = this.getSelectiveCallingCode();
            String rhsSelectiveCallingCode;
            rhsSelectiveCallingCode = that.getSelectiveCallingCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "selectiveCallingCode", lhsSelectiveCallingCode), LocatorUtils.property(thatLocator, "selectiveCallingCode", rhsSelectiveCallingCode), lhsSelectiveCallingCode, rhsSelectiveCallingCode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<CommunicationCapabilityCodeType> theCommunicationCapabilityCode;
            theCommunicationCapabilityCode = (((this.communicationCapabilityCode!= null)&&(!this.communicationCapabilityCode.isEmpty()))?this.getCommunicationCapabilityCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "communicationCapabilityCode", theCommunicationCapabilityCode), currentHashCode, theCommunicationCapabilityCode);
        }
        {
            List<DatalinkCommunicationCapabilityCodeType> theDatalinkCommunicationCapabilityCode;
            theDatalinkCommunicationCapabilityCode = (((this.datalinkCommunicationCapabilityCode!= null)&&(!this.datalinkCommunicationCapabilityCode.isEmpty()))?this.getDatalinkCommunicationCapabilityCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "datalinkCommunicationCapabilityCode", theDatalinkCommunicationCapabilityCode), currentHashCode, theDatalinkCommunicationCapabilityCode);
        }
        {
            String theOtherCommunicationCapabilities;
            theOtherCommunicationCapabilities = this.getOtherCommunicationCapabilities();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherCommunicationCapabilities", theOtherCommunicationCapabilities), currentHashCode, theOtherCommunicationCapabilities);
        }
        {
            String theOtherDatalinkCapabilities;
            theOtherDatalinkCapabilities = this.getOtherDatalinkCapabilities();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherDatalinkCapabilities", theOtherDatalinkCapabilities), currentHashCode, theOtherDatalinkCapabilities);
        }
        {
            String theSelectiveCallingCode;
            theSelectiveCallingCode = this.getSelectiveCallingCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "selectiveCallingCode", theSelectiveCallingCode), currentHashCode, theSelectiveCallingCode);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
