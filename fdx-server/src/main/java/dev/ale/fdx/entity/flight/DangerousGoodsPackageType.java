//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.DimensionsType;
import dev.ale.fdx.entity.base.ExtensibleType;


/**
 * 
 *             The part of the IATA Shipper's Declaration For Dangerous Goods that contains the 
 *             Line Item information for the shipment. 
 *             The part of the IATA Shipper's Declaration For Dangerous Goods that contains the 
 *             Overpack Detail for the shipment. 
 *             The part of the IATA Shipper's Declaration For Dangerous Goods that contains the 
 *             Package Details for the shipment. 
 *          
 * 
 * <p>Java class for DangerousGoodsPackageType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DangerousGoodsPackageType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="allPackedInOne" type="{http://www.fixm.aero/flight/4.1}AllPackedInOneType" minOccurs="0"/>
 *         &lt;element name="hazardClass" type="{http://www.fixm.aero/flight/4.1}HazardClassType" minOccurs="0"/>
 *         &lt;element name="packageDimensions" type="{http://www.fixm.aero/base/4.1}DimensionsType" minOccurs="0"/>
 *         &lt;element name="radioactiveMaterials" type="{http://www.fixm.aero/flight/4.1}RadioactiveMaterialType" minOccurs="0"/>
 *         &lt;element name="shipmentDimensions" type="{http://www.fixm.aero/flight/4.1}DangerousGoodsDimensionsType" minOccurs="0"/>
 *         &lt;element name="subsidiaryHazardClass" type="{http://www.fixm.aero/flight/4.1}HazardClassType" maxOccurs="2" minOccurs="0"/>
 *         &lt;element name="temperatures" type="{http://www.fixm.aero/flight/4.1}TemperaturesType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="compatibilityGroup" type="{http://www.fixm.aero/flight/4.1}CompatibilityGroupType" />
 *       &lt;attribute name="dangerousGoodsLimitation" type="{http://www.fixm.aero/flight/4.1}AircraftDangerousGoodsLimitationType" />
 *       &lt;attribute name="dangerousGoodsQuantity" type="{http://www.fixm.aero/base/4.1}CountType" />
 *       &lt;attribute name="marinePollutantIndicator" type="{http://www.fixm.aero/flight/4.1}MarinePollutantIndicatorType" />
 *       &lt;attribute name="overpackIndicator" type="{http://www.fixm.aero/flight/4.1}OverpackIndicatorType" />
 *       &lt;attribute name="packingGroup" type="{http://www.fixm.aero/flight/4.1}PackingGroupType" />
 *       &lt;attribute name="packingInstructionNumber">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.fixm.aero/base/4.1}CharacterStringType">
 *             &lt;pattern value="Y?[0-9]{3}"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="productName" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="properShippingName" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="reportableQuantity" type="{http://www.fixm.aero/base/4.1}CountType" />
 *       &lt;attribute name="shipmentType" type="{http://www.fixm.aero/flight/4.1}ShipmentTypeType" />
 *       &lt;attribute name="supplementaryInformation" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="technicalName" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="typeOfPackaging" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="unNumber">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.fixm.aero/base/4.1}CharacterStringType">
 *             &lt;pattern value="(UN|ID|NA)?\d{4}"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DangerousGoodsPackageType", propOrder = {
    "allPackedInOne",
    "hazardClass",
    "packageDimensions",
    "radioactiveMaterials",
    "shipmentDimensions",
    "subsidiaryHazardClass",
    "temperatures"
})
@Entity(name = "DangerousGoodsPackageType")
@Table(name = "DANGEROUSGOODSPACKAGETYPE")
public class DangerousGoodsPackageType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected AllPackedInOneType allPackedInOne;
    protected HazardClassType hazardClass;
    protected DimensionsType packageDimensions;
    protected RadioactiveMaterialType radioactiveMaterials;
    protected DangerousGoodsDimensionsType shipmentDimensions;
    protected List<HazardClassType> subsidiaryHazardClass;
    protected TemperaturesType temperatures;
    @XmlAttribute(name = "compatibilityGroup")
    protected String compatibilityGroup;
    @XmlAttribute(name = "dangerousGoodsLimitation")
    protected AircraftDangerousGoodsLimitationType dangerousGoodsLimitation;
    @XmlAttribute(name = "dangerousGoodsQuantity")
    protected Integer dangerousGoodsQuantity;
    @XmlAttribute(name = "marinePollutantIndicator")
    protected MarinePollutantIndicatorType marinePollutantIndicator;
    @XmlAttribute(name = "overpackIndicator")
    protected OverpackIndicatorType overpackIndicator;
    @XmlAttribute(name = "packingGroup")
    protected PackingGroupType packingGroup;
    @XmlAttribute(name = "packingInstructionNumber")
    protected String packingInstructionNumber;
    @XmlAttribute(name = "productName")
    protected String productName;
    @XmlAttribute(name = "properShippingName")
    protected String properShippingName;
    @XmlAttribute(name = "reportableQuantity")
    protected Integer reportableQuantity;
    @XmlAttribute(name = "shipmentType")
    protected ShipmentTypeType shipmentType;
    @XmlAttribute(name = "supplementaryInformation")
    protected String supplementaryInformation;
    @XmlAttribute(name = "technicalName")
    protected String technicalName;
    @XmlAttribute(name = "typeOfPackaging")
    protected String typeOfPackaging;
    @XmlAttribute(name = "unNumber")
    protected String unNumber;

    /**
     * Gets the value of the allPackedInOne property.
     * 
     * @return
     *     possible object is
     *     {@link AllPackedInOneType }
     *     
     */
    @ManyToOne(targetEntity = AllPackedInOneType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ALLPACKEDINONE_DANGEROUSGOOD_0")
    public AllPackedInOneType getAllPackedInOne() {
        return allPackedInOne;
    }

    /**
     * Sets the value of the allPackedInOne property.
     * 
     * @param value
     *     allowed object is
     *     {@link AllPackedInOneType }
     *     
     */
    public void setAllPackedInOne(AllPackedInOneType value) {
        this.allPackedInOne = value;
    }

    /**
     * Gets the value of the hazardClass property.
     * 
     * @return
     *     possible object is
     *     {@link HazardClassType }
     *     
     */
    @ManyToOne(targetEntity = HazardClassType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HAZARDCLASS_DANGEROUSGOODSPA_0")
    public HazardClassType getHazardClass() {
        return hazardClass;
    }

    /**
     * Sets the value of the hazardClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link HazardClassType }
     *     
     */
    public void setHazardClass(HazardClassType value) {
        this.hazardClass = value;
    }

    /**
     * Gets the value of the packageDimensions property.
     * 
     * @return
     *     possible object is
     *     {@link DimensionsType }
     *     
     */
    @ManyToOne(targetEntity = DimensionsType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PACKAGEDIMENSIONS_DANGEROUSG_0")
    public DimensionsType getPackageDimensions() {
        return packageDimensions;
    }

    /**
     * Sets the value of the packageDimensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link DimensionsType }
     *     
     */
    public void setPackageDimensions(DimensionsType value) {
        this.packageDimensions = value;
    }

    /**
     * Gets the value of the radioactiveMaterials property.
     * 
     * @return
     *     possible object is
     *     {@link RadioactiveMaterialType }
     *     
     */
    @ManyToOne(targetEntity = RadioactiveMaterialType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RADIOACTIVEMATERIALS_DANGERO_0")
    public RadioactiveMaterialType getRadioactiveMaterials() {
        return radioactiveMaterials;
    }

    /**
     * Sets the value of the radioactiveMaterials property.
     * 
     * @param value
     *     allowed object is
     *     {@link RadioactiveMaterialType }
     *     
     */
    public void setRadioactiveMaterials(RadioactiveMaterialType value) {
        this.radioactiveMaterials = value;
    }

    /**
     * Gets the value of the shipmentDimensions property.
     * 
     * @return
     *     possible object is
     *     {@link DangerousGoodsDimensionsType }
     *     
     */
    @ManyToOne(targetEntity = DangerousGoodsDimensionsType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SHIPMENTDIMENSIONS_DANGEROUS_0")
    public DangerousGoodsDimensionsType getShipmentDimensions() {
        return shipmentDimensions;
    }

    /**
     * Sets the value of the shipmentDimensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link DangerousGoodsDimensionsType }
     *     
     */
    public void setShipmentDimensions(DangerousGoodsDimensionsType value) {
        this.shipmentDimensions = value;
    }

    /**
     * Gets the value of the subsidiaryHazardClass property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subsidiaryHazardClass property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubsidiaryHazardClass().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HazardClassType }
     * 
     * 
     */
    @OneToMany(targetEntity = HazardClassType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.LAZY)
    @LazyCollection(LazyCollectionOption.FALSE)
    @JoinColumn(name = "SUBSIDIARYHAZARDCLASS_DANGER_0")
    public List<HazardClassType> getSubsidiaryHazardClass() {
        if (subsidiaryHazardClass == null) {
            subsidiaryHazardClass = new ArrayList<HazardClassType>();
        }
        return this.subsidiaryHazardClass;
    }

    /**
     * 
     * 
     */
    public void setSubsidiaryHazardClass(List<HazardClassType> subsidiaryHazardClass) {
        this.subsidiaryHazardClass = subsidiaryHazardClass;
    }

    /**
     * Gets the value of the temperatures property.
     * 
     * @return
     *     possible object is
     *     {@link TemperaturesType }
     *     
     */
    @ManyToOne(targetEntity = TemperaturesType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TEMPERATURES_DANGEROUSGOODSP_0")
    public TemperaturesType getTemperatures() {
        return temperatures;
    }

    /**
     * Sets the value of the temperatures property.
     * 
     * @param value
     *     allowed object is
     *     {@link TemperaturesType }
     *     
     */
    public void setTemperatures(TemperaturesType value) {
        this.temperatures = value;
    }

    /**
     * Gets the value of the compatibilityGroup property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "COMPATIBILITYGROUP", length = 4096)
    @Column(name = "COMPATIBILITYGROUP", columnDefinition = "TEXT")
    public String getCompatibilityGroup() {
        return compatibilityGroup;
    }

    /**
     * Sets the value of the compatibilityGroup property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCompatibilityGroup(String value) {
        this.compatibilityGroup = value;
    }

    /**
     * Gets the value of the dangerousGoodsLimitation property.
     * 
     * @return
     *     possible object is
     *     {@link AircraftDangerousGoodsLimitationType }
     *     
     */
    @Basic
    @Column(name = "DANGEROUSGOODSLIMITATION", length = 255)
    @Enumerated(EnumType.STRING)
    public AircraftDangerousGoodsLimitationType getDangerousGoodsLimitation() {
        return dangerousGoodsLimitation;
    }

    /**
     * Sets the value of the dangerousGoodsLimitation property.
     * 
     * @param value
     *     allowed object is
     *     {@link AircraftDangerousGoodsLimitationType }
     *     
     */
    public void setDangerousGoodsLimitation(AircraftDangerousGoodsLimitationType value) {
        this.dangerousGoodsLimitation = value;
    }

    /**
     * Gets the value of the dangerousGoodsQuantity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "DANGEROUSGOODSQUANTITY", precision = 10, scale = 0)
    public Integer getDangerousGoodsQuantity() {
        return dangerousGoodsQuantity;
    }

    /**
     * Sets the value of the dangerousGoodsQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDangerousGoodsQuantity(Integer value) {
        this.dangerousGoodsQuantity = value;
    }

    /**
     * Gets the value of the marinePollutantIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link MarinePollutantIndicatorType }
     *     
     */
    @Basic
    @Column(name = "MARINEPOLLUTANTINDICATOR", length = 255)
    @Enumerated(EnumType.STRING)
    public MarinePollutantIndicatorType getMarinePollutantIndicator() {
        return marinePollutantIndicator;
    }

    /**
     * Sets the value of the marinePollutantIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link MarinePollutantIndicatorType }
     *     
     */
    public void setMarinePollutantIndicator(MarinePollutantIndicatorType value) {
        this.marinePollutantIndicator = value;
    }

    /**
     * Gets the value of the overpackIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link OverpackIndicatorType }
     *     
     */
    @Basic
    @Column(name = "OVERPACKINDICATOR", length = 255)
    @Enumerated(EnumType.STRING)
    public OverpackIndicatorType getOverpackIndicator() {
        return overpackIndicator;
    }

    /**
     * Sets the value of the overpackIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link OverpackIndicatorType }
     *     
     */
    public void setOverpackIndicator(OverpackIndicatorType value) {
        this.overpackIndicator = value;
    }

    /**
     * Gets the value of the packingGroup property.
     * 
     * @return
     *     possible object is
     *     {@link PackingGroupType }
     *     
     */
    @Basic
    @Column(name = "PACKINGGROUP", length = 255)
    @Enumerated(EnumType.STRING)
    public PackingGroupType getPackingGroup() {
        return packingGroup;
    }

    /**
     * Sets the value of the packingGroup property.
     * 
     * @param value
     *     allowed object is
     *     {@link PackingGroupType }
     *     
     */
    public void setPackingGroup(PackingGroupType value) {
        this.packingGroup = value;
    }

    /**
     * Gets the value of the packingInstructionNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "PACKINGINSTRUCTIONNUMBER", length = 4096)
    @Column(name = "PACKINGINSTRUCTIONNUMBER", columnDefinition = "TEXT")
    public String getPackingInstructionNumber() {
        return packingInstructionNumber;
    }

    /**
     * Sets the value of the packingInstructionNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPackingInstructionNumber(String value) {
        this.packingInstructionNumber = value;
    }

    /**
     * Gets the value of the productName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "PRODUCTNAME", length = 4096)
    @Column(name = "PRODUCTNAME", columnDefinition = "TEXT")
    public String getProductName() {
        return productName;
    }

    /**
     * Sets the value of the productName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProductName(String value) {
        this.productName = value;
    }

    /**
     * Gets the value of the properShippingName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "PROPERSHIPPINGNAME", length = 4096)
    @Column(name = "PROPERSHIPPINGNAME", columnDefinition = "TEXT")
    public String getProperShippingName() {
        return properShippingName;
    }

    /**
     * Sets the value of the properShippingName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProperShippingName(String value) {
        this.properShippingName = value;
    }

    /**
     * Gets the value of the reportableQuantity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "REPORTABLEQUANTITY", precision = 10, scale = 0)
    public Integer getReportableQuantity() {
        return reportableQuantity;
    }

    /**
     * Sets the value of the reportableQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setReportableQuantity(Integer value) {
        this.reportableQuantity = value;
    }

    /**
     * Gets the value of the shipmentType property.
     * 
     * @return
     *     possible object is
     *     {@link ShipmentTypeType }
     *     
     */
    @Basic
    @Column(name = "SHIPMENTTYPE", length = 255)
    @Enumerated(EnumType.STRING)
    public ShipmentTypeType getShipmentType() {
        return shipmentType;
    }

    /**
     * Sets the value of the shipmentType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShipmentTypeType }
     *     
     */
    public void setShipmentType(ShipmentTypeType value) {
        this.shipmentType = value;
    }

    /**
     * Gets the value of the supplementaryInformation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "SUPPLEMENTARYINFORMATION", length = 4096)
    @Column(name = "SUPPLEMENTARYINFORMATION", columnDefinition = "TEXT")
    public String getSupplementaryInformation() {
        return supplementaryInformation;
    }

    /**
     * Sets the value of the supplementaryInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSupplementaryInformation(String value) {
        this.supplementaryInformation = value;
    }

    /**
     * Gets the value of the technicalName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "TECHNICALNAME", length = 4096)
    @Column(name = "TECHNICALNAME", columnDefinition = "TEXT")
    public String getTechnicalName() {
        return technicalName;
    }

    /**
     * Sets the value of the technicalName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTechnicalName(String value) {
        this.technicalName = value;
    }

    /**
     * Gets the value of the typeOfPackaging property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "TYPEOFPACKAGING", length = 4096)
    @Column(name = "TYPEOFPACKAGING", columnDefinition = "TEXT")
    public String getTypeOfPackaging() {
        return typeOfPackaging;
    }

    /**
     * Sets the value of the typeOfPackaging property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTypeOfPackaging(String value) {
        this.typeOfPackaging = value;
    }

    /**
     * Gets the value of the unNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "UNNUMBER", length = 4096)
    @Column(name = "UNNUMBER", columnDefinition = "TEXT")
    public String getUnNumber() {
        return unNumber;
    }

    /**
     * Sets the value of the unNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUnNumber(String value) {
        this.unNumber = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DangerousGoodsPackageType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final DangerousGoodsPackageType that = ((DangerousGoodsPackageType) object);
        {
            AllPackedInOneType lhsAllPackedInOne;
            lhsAllPackedInOne = this.getAllPackedInOne();
            AllPackedInOneType rhsAllPackedInOne;
            rhsAllPackedInOne = that.getAllPackedInOne();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "allPackedInOne", lhsAllPackedInOne), LocatorUtils.property(thatLocator, "allPackedInOne", rhsAllPackedInOne), lhsAllPackedInOne, rhsAllPackedInOne)) {
                return false;
            }
        }
        {
            HazardClassType lhsHazardClass;
            lhsHazardClass = this.getHazardClass();
            HazardClassType rhsHazardClass;
            rhsHazardClass = that.getHazardClass();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hazardClass", lhsHazardClass), LocatorUtils.property(thatLocator, "hazardClass", rhsHazardClass), lhsHazardClass, rhsHazardClass)) {
                return false;
            }
        }
        {
            DimensionsType lhsPackageDimensions;
            lhsPackageDimensions = this.getPackageDimensions();
            DimensionsType rhsPackageDimensions;
            rhsPackageDimensions = that.getPackageDimensions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "packageDimensions", lhsPackageDimensions), LocatorUtils.property(thatLocator, "packageDimensions", rhsPackageDimensions), lhsPackageDimensions, rhsPackageDimensions)) {
                return false;
            }
        }
        {
            RadioactiveMaterialType lhsRadioactiveMaterials;
            lhsRadioactiveMaterials = this.getRadioactiveMaterials();
            RadioactiveMaterialType rhsRadioactiveMaterials;
            rhsRadioactiveMaterials = that.getRadioactiveMaterials();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "radioactiveMaterials", lhsRadioactiveMaterials), LocatorUtils.property(thatLocator, "radioactiveMaterials", rhsRadioactiveMaterials), lhsRadioactiveMaterials, rhsRadioactiveMaterials)) {
                return false;
            }
        }
        {
            DangerousGoodsDimensionsType lhsShipmentDimensions;
            lhsShipmentDimensions = this.getShipmentDimensions();
            DangerousGoodsDimensionsType rhsShipmentDimensions;
            rhsShipmentDimensions = that.getShipmentDimensions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipmentDimensions", lhsShipmentDimensions), LocatorUtils.property(thatLocator, "shipmentDimensions", rhsShipmentDimensions), lhsShipmentDimensions, rhsShipmentDimensions)) {
                return false;
            }
        }
        {
            List<HazardClassType> lhsSubsidiaryHazardClass;
            lhsSubsidiaryHazardClass = (((this.subsidiaryHazardClass!= null)&&(!this.subsidiaryHazardClass.isEmpty()))?this.getSubsidiaryHazardClass():null);
            List<HazardClassType> rhsSubsidiaryHazardClass;
            rhsSubsidiaryHazardClass = (((that.subsidiaryHazardClass!= null)&&(!that.subsidiaryHazardClass.isEmpty()))?that.getSubsidiaryHazardClass():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subsidiaryHazardClass", lhsSubsidiaryHazardClass), LocatorUtils.property(thatLocator, "subsidiaryHazardClass", rhsSubsidiaryHazardClass), lhsSubsidiaryHazardClass, rhsSubsidiaryHazardClass)) {
                return false;
            }
        }
        {
            TemperaturesType lhsTemperatures;
            lhsTemperatures = this.getTemperatures();
            TemperaturesType rhsTemperatures;
            rhsTemperatures = that.getTemperatures();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "temperatures", lhsTemperatures), LocatorUtils.property(thatLocator, "temperatures", rhsTemperatures), lhsTemperatures, rhsTemperatures)) {
                return false;
            }
        }
        {
            String lhsCompatibilityGroup;
            lhsCompatibilityGroup = this.getCompatibilityGroup();
            String rhsCompatibilityGroup;
            rhsCompatibilityGroup = that.getCompatibilityGroup();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "compatibilityGroup", lhsCompatibilityGroup), LocatorUtils.property(thatLocator, "compatibilityGroup", rhsCompatibilityGroup), lhsCompatibilityGroup, rhsCompatibilityGroup)) {
                return false;
            }
        }
        {
            AircraftDangerousGoodsLimitationType lhsDangerousGoodsLimitation;
            lhsDangerousGoodsLimitation = this.getDangerousGoodsLimitation();
            AircraftDangerousGoodsLimitationType rhsDangerousGoodsLimitation;
            rhsDangerousGoodsLimitation = that.getDangerousGoodsLimitation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dangerousGoodsLimitation", lhsDangerousGoodsLimitation), LocatorUtils.property(thatLocator, "dangerousGoodsLimitation", rhsDangerousGoodsLimitation), lhsDangerousGoodsLimitation, rhsDangerousGoodsLimitation)) {
                return false;
            }
        }
        {
            Integer lhsDangerousGoodsQuantity;
            lhsDangerousGoodsQuantity = this.getDangerousGoodsQuantity();
            Integer rhsDangerousGoodsQuantity;
            rhsDangerousGoodsQuantity = that.getDangerousGoodsQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dangerousGoodsQuantity", lhsDangerousGoodsQuantity), LocatorUtils.property(thatLocator, "dangerousGoodsQuantity", rhsDangerousGoodsQuantity), lhsDangerousGoodsQuantity, rhsDangerousGoodsQuantity)) {
                return false;
            }
        }
        {
            MarinePollutantIndicatorType lhsMarinePollutantIndicator;
            lhsMarinePollutantIndicator = this.getMarinePollutantIndicator();
            MarinePollutantIndicatorType rhsMarinePollutantIndicator;
            rhsMarinePollutantIndicator = that.getMarinePollutantIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "marinePollutantIndicator", lhsMarinePollutantIndicator), LocatorUtils.property(thatLocator, "marinePollutantIndicator", rhsMarinePollutantIndicator), lhsMarinePollutantIndicator, rhsMarinePollutantIndicator)) {
                return false;
            }
        }
        {
            OverpackIndicatorType lhsOverpackIndicator;
            lhsOverpackIndicator = this.getOverpackIndicator();
            OverpackIndicatorType rhsOverpackIndicator;
            rhsOverpackIndicator = that.getOverpackIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "overpackIndicator", lhsOverpackIndicator), LocatorUtils.property(thatLocator, "overpackIndicator", rhsOverpackIndicator), lhsOverpackIndicator, rhsOverpackIndicator)) {
                return false;
            }
        }
        {
            PackingGroupType lhsPackingGroup;
            lhsPackingGroup = this.getPackingGroup();
            PackingGroupType rhsPackingGroup;
            rhsPackingGroup = that.getPackingGroup();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "packingGroup", lhsPackingGroup), LocatorUtils.property(thatLocator, "packingGroup", rhsPackingGroup), lhsPackingGroup, rhsPackingGroup)) {
                return false;
            }
        }
        {
            String lhsPackingInstructionNumber;
            lhsPackingInstructionNumber = this.getPackingInstructionNumber();
            String rhsPackingInstructionNumber;
            rhsPackingInstructionNumber = that.getPackingInstructionNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "packingInstructionNumber", lhsPackingInstructionNumber), LocatorUtils.property(thatLocator, "packingInstructionNumber", rhsPackingInstructionNumber), lhsPackingInstructionNumber, rhsPackingInstructionNumber)) {
                return false;
            }
        }
        {
            String lhsProductName;
            lhsProductName = this.getProductName();
            String rhsProductName;
            rhsProductName = that.getProductName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "productName", lhsProductName), LocatorUtils.property(thatLocator, "productName", rhsProductName), lhsProductName, rhsProductName)) {
                return false;
            }
        }
        {
            String lhsProperShippingName;
            lhsProperShippingName = this.getProperShippingName();
            String rhsProperShippingName;
            rhsProperShippingName = that.getProperShippingName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "properShippingName", lhsProperShippingName), LocatorUtils.property(thatLocator, "properShippingName", rhsProperShippingName), lhsProperShippingName, rhsProperShippingName)) {
                return false;
            }
        }
        {
            Integer lhsReportableQuantity;
            lhsReportableQuantity = this.getReportableQuantity();
            Integer rhsReportableQuantity;
            rhsReportableQuantity = that.getReportableQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportableQuantity", lhsReportableQuantity), LocatorUtils.property(thatLocator, "reportableQuantity", rhsReportableQuantity), lhsReportableQuantity, rhsReportableQuantity)) {
                return false;
            }
        }
        {
            ShipmentTypeType lhsShipmentType;
            lhsShipmentType = this.getShipmentType();
            ShipmentTypeType rhsShipmentType;
            rhsShipmentType = that.getShipmentType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipmentType", lhsShipmentType), LocatorUtils.property(thatLocator, "shipmentType", rhsShipmentType), lhsShipmentType, rhsShipmentType)) {
                return false;
            }
        }
        {
            String lhsSupplementaryInformation;
            lhsSupplementaryInformation = this.getSupplementaryInformation();
            String rhsSupplementaryInformation;
            rhsSupplementaryInformation = that.getSupplementaryInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplementaryInformation", lhsSupplementaryInformation), LocatorUtils.property(thatLocator, "supplementaryInformation", rhsSupplementaryInformation), lhsSupplementaryInformation, rhsSupplementaryInformation)) {
                return false;
            }
        }
        {
            String lhsTechnicalName;
            lhsTechnicalName = this.getTechnicalName();
            String rhsTechnicalName;
            rhsTechnicalName = that.getTechnicalName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "technicalName", lhsTechnicalName), LocatorUtils.property(thatLocator, "technicalName", rhsTechnicalName), lhsTechnicalName, rhsTechnicalName)) {
                return false;
            }
        }
        {
            String lhsTypeOfPackaging;
            lhsTypeOfPackaging = this.getTypeOfPackaging();
            String rhsTypeOfPackaging;
            rhsTypeOfPackaging = that.getTypeOfPackaging();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "typeOfPackaging", lhsTypeOfPackaging), LocatorUtils.property(thatLocator, "typeOfPackaging", rhsTypeOfPackaging), lhsTypeOfPackaging, rhsTypeOfPackaging)) {
                return false;
            }
        }
        {
            String lhsUnNumber;
            lhsUnNumber = this.getUnNumber();
            String rhsUnNumber;
            rhsUnNumber = that.getUnNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "unNumber", lhsUnNumber), LocatorUtils.property(thatLocator, "unNumber", rhsUnNumber), lhsUnNumber, rhsUnNumber)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            AllPackedInOneType theAllPackedInOne;
            theAllPackedInOne = this.getAllPackedInOne();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "allPackedInOne", theAllPackedInOne), currentHashCode, theAllPackedInOne);
        }
        {
            HazardClassType theHazardClass;
            theHazardClass = this.getHazardClass();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hazardClass", theHazardClass), currentHashCode, theHazardClass);
        }
        {
            DimensionsType thePackageDimensions;
            thePackageDimensions = this.getPackageDimensions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "packageDimensions", thePackageDimensions), currentHashCode, thePackageDimensions);
        }
        {
            RadioactiveMaterialType theRadioactiveMaterials;
            theRadioactiveMaterials = this.getRadioactiveMaterials();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "radioactiveMaterials", theRadioactiveMaterials), currentHashCode, theRadioactiveMaterials);
        }
        {
            DangerousGoodsDimensionsType theShipmentDimensions;
            theShipmentDimensions = this.getShipmentDimensions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipmentDimensions", theShipmentDimensions), currentHashCode, theShipmentDimensions);
        }
        {
            List<HazardClassType> theSubsidiaryHazardClass;
            theSubsidiaryHazardClass = (((this.subsidiaryHazardClass!= null)&&(!this.subsidiaryHazardClass.isEmpty()))?this.getSubsidiaryHazardClass():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subsidiaryHazardClass", theSubsidiaryHazardClass), currentHashCode, theSubsidiaryHazardClass);
        }
        {
            TemperaturesType theTemperatures;
            theTemperatures = this.getTemperatures();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "temperatures", theTemperatures), currentHashCode, theTemperatures);
        }
        {
            String theCompatibilityGroup;
            theCompatibilityGroup = this.getCompatibilityGroup();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "compatibilityGroup", theCompatibilityGroup), currentHashCode, theCompatibilityGroup);
        }
        {
            AircraftDangerousGoodsLimitationType theDangerousGoodsLimitation;
            theDangerousGoodsLimitation = this.getDangerousGoodsLimitation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dangerousGoodsLimitation", theDangerousGoodsLimitation), currentHashCode, theDangerousGoodsLimitation);
        }
        {
            Integer theDangerousGoodsQuantity;
            theDangerousGoodsQuantity = this.getDangerousGoodsQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dangerousGoodsQuantity", theDangerousGoodsQuantity), currentHashCode, theDangerousGoodsQuantity);
        }
        {
            MarinePollutantIndicatorType theMarinePollutantIndicator;
            theMarinePollutantIndicator = this.getMarinePollutantIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "marinePollutantIndicator", theMarinePollutantIndicator), currentHashCode, theMarinePollutantIndicator);
        }
        {
            OverpackIndicatorType theOverpackIndicator;
            theOverpackIndicator = this.getOverpackIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "overpackIndicator", theOverpackIndicator), currentHashCode, theOverpackIndicator);
        }
        {
            PackingGroupType thePackingGroup;
            thePackingGroup = this.getPackingGroup();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "packingGroup", thePackingGroup), currentHashCode, thePackingGroup);
        }
        {
            String thePackingInstructionNumber;
            thePackingInstructionNumber = this.getPackingInstructionNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "packingInstructionNumber", thePackingInstructionNumber), currentHashCode, thePackingInstructionNumber);
        }
        {
            String theProductName;
            theProductName = this.getProductName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "productName", theProductName), currentHashCode, theProductName);
        }
        {
            String theProperShippingName;
            theProperShippingName = this.getProperShippingName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "properShippingName", theProperShippingName), currentHashCode, theProperShippingName);
        }
        {
            Integer theReportableQuantity;
            theReportableQuantity = this.getReportableQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportableQuantity", theReportableQuantity), currentHashCode, theReportableQuantity);
        }
        {
            ShipmentTypeType theShipmentType;
            theShipmentType = this.getShipmentType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipmentType", theShipmentType), currentHashCode, theShipmentType);
        }
        {
            String theSupplementaryInformation;
            theSupplementaryInformation = this.getSupplementaryInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplementaryInformation", theSupplementaryInformation), currentHashCode, theSupplementaryInformation);
        }
        {
            String theTechnicalName;
            theTechnicalName = this.getTechnicalName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "technicalName", theTechnicalName), currentHashCode, theTechnicalName);
        }
        {
            String theTypeOfPackaging;
            theTypeOfPackaging = this.getTypeOfPackaging();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "typeOfPackaging", theTypeOfPackaging), currentHashCode, theTypeOfPackaging);
        }
        {
            String theUnNumber;
            theUnNumber = this.getUnNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "unNumber", theUnNumber), currentHashCode, theUnNumber);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
