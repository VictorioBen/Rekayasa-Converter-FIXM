//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 *             A number assigned to a dangerous good that represents a classification (Class) according 
 *             to the most dominant hazard it represents, potentially followed by a number representing 
 *             a subdivision (Division) within the Class. 
 *             An identifier of any subsidiary hazard class(es)/division(s) in addition to the primary 
 *             hazard class and division. 
 *          
 * 
 * <p>Java class for HazardClassType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="HazardClassType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.fixm.aero/flight/4.1>RestrictedHazardClassType">
 *       &lt;attribute name="hazardDivision">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.fixm.aero/base/4.1}CountType">
 *             &lt;maxInclusive value="99"/>
 *             &lt;minInclusive value="0"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HazardClassType", propOrder = {
    "value"
})
@Entity(name = "HazardClassType")
@Table(name = "HAZARDCLASSTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class HazardClassType
    implements Equals, HashCode
{

    @XmlValue
    protected int value;
    @XmlAttribute(name = "hazardDivision")
    protected Integer hazardDivision;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * 
     *             Helper type for restrictions on HazardClassType 
     *          
     * 
     */
    @Basic
    @Column(name = "VALUE_", precision = 10, scale = 0)
    public int getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     */
    public void setValue(int value) {
        this.value = value;
    }

    /**
     * Gets the value of the hazardDivision property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "HAZARDDIVISION", scale = 0)
    public Integer getHazardDivision() {
        return hazardDivision;
    }

    /**
     * Sets the value of the hazardDivision property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setHazardDivision(Integer value) {
        this.hazardDivision = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof HazardClassType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final HazardClassType that = ((HazardClassType) object);
        {
            int lhsValue;
            lhsValue = (true?this.getValue(): 0);
            int rhsValue;
            rhsValue = (true?that.getValue(): 0);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                return false;
            }
        }
        {
            Integer lhsHazardDivision;
            lhsHazardDivision = this.getHazardDivision();
            Integer rhsHazardDivision;
            rhsHazardDivision = that.getHazardDivision();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hazardDivision", lhsHazardDivision), LocatorUtils.property(thatLocator, "hazardDivision", rhsHazardDivision), lhsHazardDivision, rhsHazardDivision)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theValue;
            theValue = (true?this.getValue(): 0);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
        }
        {
            Integer theHazardDivision;
            theHazardDivision = this.getHazardDivision();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hazardDivision", theHazardDivision), currentHashCode, theHazardDivision);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
