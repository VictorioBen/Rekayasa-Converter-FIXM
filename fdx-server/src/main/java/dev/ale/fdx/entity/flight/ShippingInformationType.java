//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OrderColumn;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.AerodromeReferenceType;
import dev.ale.fdx.entity.base.ExtensibleType;


/**
 * 
 *             IATA Shipper's Declaration for Dangerous Goods. 
 *          
 * 
 * <p>Java class for ShippingInformationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ShippingInformationType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="aerodromeOfLoading" type="{http://www.fixm.aero/base/4.1}AerodromeReferenceType" minOccurs="0"/>
 *         &lt;element name="aerodromeOfUnloading" type="{http://www.fixm.aero/base/4.1}AerodromeReferenceType" minOccurs="0"/>
 *         &lt;element name="consignee" type="{http://www.fixm.aero/flight/4.1}StructuredPostalAddressType" minOccurs="0"/>
 *         &lt;element name="declarationText" type="{http://www.fixm.aero/flight/4.1}DeclarationTextType" minOccurs="0"/>
 *         &lt;element name="shipper" type="{http://www.fixm.aero/flight/4.1}StructuredPostalAddressType" minOccurs="0"/>
 *         &lt;element name="transferAerodromes" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;list itemType="{http://www.fixm.aero/base/4.1}LocationIndicatorType" />
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="dangerousGoodsScreeningLocation" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="departureCountry" type="{http://www.fixm.aero/base/4.1}TextCountryNameType" />
 *       &lt;attribute name="destinationCountry" type="{http://www.fixm.aero/base/4.1}TextCountryNameType" />
 *       &lt;attribute name="originCountry" type="{http://www.fixm.aero/base/4.1}TextCountryNameType" />
 *       &lt;attribute name="shipmentAuthorizations" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="subsidiaryHazardClassAndDivision" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="supplementaryInformation" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ShippingInformationType", propOrder = {
    "aerodromeOfLoading",
    "aerodromeOfUnloading",
    "consignee",
    "declarationText",
    "shipper",
    "transferAerodromes"
})
@Entity(name = "ShippingInformationType")
@Table(name = "SHIPPINGINFORMATIONTYPE")
public class ShippingInformationType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected AerodromeReferenceType aerodromeOfLoading;
    protected AerodromeReferenceType aerodromeOfUnloading;
    protected StructuredPostalAddressType consignee;
    protected DeclarationTextType declarationText;
    protected StructuredPostalAddressType shipper;
    @XmlList
    protected List<String> transferAerodromes;
    @XmlAttribute(name = "dangerousGoodsScreeningLocation")
    protected String dangerousGoodsScreeningLocation;
    @XmlAttribute(name = "departureCountry")
    protected String departureCountry;
    @XmlAttribute(name = "destinationCountry")
    protected String destinationCountry;
    @XmlAttribute(name = "originCountry")
    protected String originCountry;
    @XmlAttribute(name = "shipmentAuthorizations")
    protected String shipmentAuthorizations;
    @XmlAttribute(name = "subsidiaryHazardClassAndDivision")
    protected String subsidiaryHazardClassAndDivision;
    @XmlAttribute(name = "supplementaryInformation")
    protected String supplementaryInformation;

    /**
     * Gets the value of the aerodromeOfLoading property.
     * 
     * @return
     *     possible object is
     *     {@link AerodromeReferenceType }
     *     
     */
    @ManyToOne(targetEntity = AerodromeReferenceType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "AERODROMEOFLOADING_SHIPPINGI_0")
    public AerodromeReferenceType getAerodromeOfLoading() {
        return aerodromeOfLoading;
    }

    /**
     * Sets the value of the aerodromeOfLoading property.
     * 
     * @param value
     *     allowed object is
     *     {@link AerodromeReferenceType }
     *     
     */
    public void setAerodromeOfLoading(AerodromeReferenceType value) {
        this.aerodromeOfLoading = value;
    }

    /**
     * Gets the value of the aerodromeOfUnloading property.
     * 
     * @return
     *     possible object is
     *     {@link AerodromeReferenceType }
     *     
     */
    @ManyToOne(targetEntity = AerodromeReferenceType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "AERODROMEOFUNLOADING_SHIPPIN_0")
    public AerodromeReferenceType getAerodromeOfUnloading() {
        return aerodromeOfUnloading;
    }

    /**
     * Sets the value of the aerodromeOfUnloading property.
     * 
     * @param value
     *     allowed object is
     *     {@link AerodromeReferenceType }
     *     
     */
    public void setAerodromeOfUnloading(AerodromeReferenceType value) {
        this.aerodromeOfUnloading = value;
    }

    /**
     * Gets the value of the consignee property.
     * 
     * @return
     *     possible object is
     *     {@link StructuredPostalAddressType }
     *     
     */
    @ManyToOne(targetEntity = StructuredPostalAddressType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONSIGNEE_SHIPPINGINFORMATIO_0")
    public StructuredPostalAddressType getConsignee() {
        return consignee;
    }

    /**
     * Sets the value of the consignee property.
     * 
     * @param value
     *     allowed object is
     *     {@link StructuredPostalAddressType }
     *     
     */
    public void setConsignee(StructuredPostalAddressType value) {
        this.consignee = value;
    }

    /**
     * Gets the value of the declarationText property.
     * 
     * @return
     *     possible object is
     *     {@link DeclarationTextType }
     *     
     */
    @ManyToOne(targetEntity = DeclarationTextType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DECLARATIONTEXT_SHIPPINGINFO_0")
    public DeclarationTextType getDeclarationText() {
        return declarationText;
    }

    /**
     * Sets the value of the declarationText property.
     * 
     * @param value
     *     allowed object is
     *     {@link DeclarationTextType }
     *     
     */
    public void setDeclarationText(DeclarationTextType value) {
        this.declarationText = value;
    }

    /**
     * Gets the value of the shipper property.
     * 
     * @return
     *     possible object is
     *     {@link StructuredPostalAddressType }
     *     
     */
    @ManyToOne(targetEntity = StructuredPostalAddressType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SHIPPER_SHIPPINGINFORMATIONT_0")
    public StructuredPostalAddressType getShipper() {
        return shipper;
    }

    /**
     * Sets the value of the shipper property.
     * 
     * @param value
     *     allowed object is
     *     {@link StructuredPostalAddressType }
     *     
     */
    public void setShipper(StructuredPostalAddressType value) {
        this.shipper = value;
    }

    /**
     * Gets the value of the transferAerodromes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the transferAerodromes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTransferAerodromes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @OrderColumn(name = "HJINDEX")
    @Column(name = "HJVALUE", length = 4096)
    @CollectionTable(name = "SHIPPINGINFORMATIONTYPE_TRAN_0", joinColumns = {
        @JoinColumn(name = "HJID")
    })
    public List<String> getTransferAerodromes() {
        if (transferAerodromes == null) {
            transferAerodromes = new ArrayList<String>();
        }
        return this.transferAerodromes;
    }

    /**
     * 
     * 
     */
    public void setTransferAerodromes(List<String> transferAerodromes) {
        this.transferAerodromes = transferAerodromes;
    }

    /**
     * Gets the value of the dangerousGoodsScreeningLocation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "DANGEROUSGOODSSCREENINGLOCAT_0", length = 4096)
    @Column(name = "DANGEROUSGOODSSCREENINGLOCAT_0", columnDefinition = "TEXT")
    public String getDangerousGoodsScreeningLocation() {
        return dangerousGoodsScreeningLocation;
    }

    /**
     * Sets the value of the dangerousGoodsScreeningLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDangerousGoodsScreeningLocation(String value) {
        this.dangerousGoodsScreeningLocation = value;
    }

    /**
     * Gets the value of the departureCountry property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DEPARTURECOUNTRY", length = 60)
    public String getDepartureCountry() {
        return departureCountry;
    }

    /**
     * Sets the value of the departureCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDepartureCountry(String value) {
        this.departureCountry = value;
    }

    /**
     * Gets the value of the destinationCountry property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DESTINATIONCOUNTRY", length = 60)
    public String getDestinationCountry() {
        return destinationCountry;
    }

    /**
     * Sets the value of the destinationCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDestinationCountry(String value) {
        this.destinationCountry = value;
    }

    /**
     * Gets the value of the originCountry property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ORIGINCOUNTRY", length = 60)
    public String getOriginCountry() {
        return originCountry;
    }

    /**
     * Sets the value of the originCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOriginCountry(String value) {
        this.originCountry = value;
    }

    /**
     * Gets the value of the shipmentAuthorizations property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "SHIPMENTAUTHORIZATIONS", length = 4096)
    @Column(name = "SHIPMENTAUTHORIZATIONS", columnDefinition = "TEXT")
    public String getShipmentAuthorizations() {
        return shipmentAuthorizations;
    }

    /**
     * Sets the value of the shipmentAuthorizations property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShipmentAuthorizations(String value) {
        this.shipmentAuthorizations = value;
    }

    /**
     * Gets the value of the subsidiaryHazardClassAndDivision property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "SUBSIDIARYHAZARDCLASSANDDIVI_0", length = 4096)
    @Column(name = "SUBSIDIARYHAZARDCLASSANDDIVI_0", columnDefinition = "TEXT")
    public String getSubsidiaryHazardClassAndDivision() {
        return subsidiaryHazardClassAndDivision;
    }

    /**
     * Sets the value of the subsidiaryHazardClassAndDivision property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubsidiaryHazardClassAndDivision(String value) {
        this.subsidiaryHazardClassAndDivision = value;
    }

    /**
     * Gets the value of the supplementaryInformation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
//    @Column(name = "SUPPLEMENTARYINFORMATION", length = 4096)
    @Column(name = "SUPPLEMENTARYINFORMATION", columnDefinition = "TEXT")
    public String getSupplementaryInformation() {
        return supplementaryInformation;
    }

    /**
     * Sets the value of the supplementaryInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSupplementaryInformation(String value) {
        this.supplementaryInformation = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ShippingInformationType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ShippingInformationType that = ((ShippingInformationType) object);
        {
            AerodromeReferenceType lhsAerodromeOfLoading;
            lhsAerodromeOfLoading = this.getAerodromeOfLoading();
            AerodromeReferenceType rhsAerodromeOfLoading;
            rhsAerodromeOfLoading = that.getAerodromeOfLoading();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "aerodromeOfLoading", lhsAerodromeOfLoading), LocatorUtils.property(thatLocator, "aerodromeOfLoading", rhsAerodromeOfLoading), lhsAerodromeOfLoading, rhsAerodromeOfLoading)) {
                return false;
            }
        }
        {
            AerodromeReferenceType lhsAerodromeOfUnloading;
            lhsAerodromeOfUnloading = this.getAerodromeOfUnloading();
            AerodromeReferenceType rhsAerodromeOfUnloading;
            rhsAerodromeOfUnloading = that.getAerodromeOfUnloading();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "aerodromeOfUnloading", lhsAerodromeOfUnloading), LocatorUtils.property(thatLocator, "aerodromeOfUnloading", rhsAerodromeOfUnloading), lhsAerodromeOfUnloading, rhsAerodromeOfUnloading)) {
                return false;
            }
        }
        {
            StructuredPostalAddressType lhsConsignee;
            lhsConsignee = this.getConsignee();
            StructuredPostalAddressType rhsConsignee;
            rhsConsignee = that.getConsignee();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "consignee", lhsConsignee), LocatorUtils.property(thatLocator, "consignee", rhsConsignee), lhsConsignee, rhsConsignee)) {
                return false;
            }
        }
        {
            DeclarationTextType lhsDeclarationText;
            lhsDeclarationText = this.getDeclarationText();
            DeclarationTextType rhsDeclarationText;
            rhsDeclarationText = that.getDeclarationText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "declarationText", lhsDeclarationText), LocatorUtils.property(thatLocator, "declarationText", rhsDeclarationText), lhsDeclarationText, rhsDeclarationText)) {
                return false;
            }
        }
        {
            StructuredPostalAddressType lhsShipper;
            lhsShipper = this.getShipper();
            StructuredPostalAddressType rhsShipper;
            rhsShipper = that.getShipper();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipper", lhsShipper), LocatorUtils.property(thatLocator, "shipper", rhsShipper), lhsShipper, rhsShipper)) {
                return false;
            }
        }
        {
            List<String> lhsTransferAerodromes;
            lhsTransferAerodromes = (((this.transferAerodromes!= null)&&(!this.transferAerodromes.isEmpty()))?this.getTransferAerodromes():null);
            List<String> rhsTransferAerodromes;
            rhsTransferAerodromes = (((that.transferAerodromes!= null)&&(!that.transferAerodromes.isEmpty()))?that.getTransferAerodromes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transferAerodromes", lhsTransferAerodromes), LocatorUtils.property(thatLocator, "transferAerodromes", rhsTransferAerodromes), lhsTransferAerodromes, rhsTransferAerodromes)) {
                return false;
            }
        }
        {
            String lhsDangerousGoodsScreeningLocation;
            lhsDangerousGoodsScreeningLocation = this.getDangerousGoodsScreeningLocation();
            String rhsDangerousGoodsScreeningLocation;
            rhsDangerousGoodsScreeningLocation = that.getDangerousGoodsScreeningLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dangerousGoodsScreeningLocation", lhsDangerousGoodsScreeningLocation), LocatorUtils.property(thatLocator, "dangerousGoodsScreeningLocation", rhsDangerousGoodsScreeningLocation), lhsDangerousGoodsScreeningLocation, rhsDangerousGoodsScreeningLocation)) {
                return false;
            }
        }
        {
            String lhsDepartureCountry;
            lhsDepartureCountry = this.getDepartureCountry();
            String rhsDepartureCountry;
            rhsDepartureCountry = that.getDepartureCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "departureCountry", lhsDepartureCountry), LocatorUtils.property(thatLocator, "departureCountry", rhsDepartureCountry), lhsDepartureCountry, rhsDepartureCountry)) {
                return false;
            }
        }
        {
            String lhsDestinationCountry;
            lhsDestinationCountry = this.getDestinationCountry();
            String rhsDestinationCountry;
            rhsDestinationCountry = that.getDestinationCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "destinationCountry", lhsDestinationCountry), LocatorUtils.property(thatLocator, "destinationCountry", rhsDestinationCountry), lhsDestinationCountry, rhsDestinationCountry)) {
                return false;
            }
        }
        {
            String lhsOriginCountry;
            lhsOriginCountry = this.getOriginCountry();
            String rhsOriginCountry;
            rhsOriginCountry = that.getOriginCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "originCountry", lhsOriginCountry), LocatorUtils.property(thatLocator, "originCountry", rhsOriginCountry), lhsOriginCountry, rhsOriginCountry)) {
                return false;
            }
        }
        {
            String lhsShipmentAuthorizations;
            lhsShipmentAuthorizations = this.getShipmentAuthorizations();
            String rhsShipmentAuthorizations;
            rhsShipmentAuthorizations = that.getShipmentAuthorizations();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipmentAuthorizations", lhsShipmentAuthorizations), LocatorUtils.property(thatLocator, "shipmentAuthorizations", rhsShipmentAuthorizations), lhsShipmentAuthorizations, rhsShipmentAuthorizations)) {
                return false;
            }
        }
        {
            String lhsSubsidiaryHazardClassAndDivision;
            lhsSubsidiaryHazardClassAndDivision = this.getSubsidiaryHazardClassAndDivision();
            String rhsSubsidiaryHazardClassAndDivision;
            rhsSubsidiaryHazardClassAndDivision = that.getSubsidiaryHazardClassAndDivision();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subsidiaryHazardClassAndDivision", lhsSubsidiaryHazardClassAndDivision), LocatorUtils.property(thatLocator, "subsidiaryHazardClassAndDivision", rhsSubsidiaryHazardClassAndDivision), lhsSubsidiaryHazardClassAndDivision, rhsSubsidiaryHazardClassAndDivision)) {
                return false;
            }
        }
        {
            String lhsSupplementaryInformation;
            lhsSupplementaryInformation = this.getSupplementaryInformation();
            String rhsSupplementaryInformation;
            rhsSupplementaryInformation = that.getSupplementaryInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplementaryInformation", lhsSupplementaryInformation), LocatorUtils.property(thatLocator, "supplementaryInformation", rhsSupplementaryInformation), lhsSupplementaryInformation, rhsSupplementaryInformation)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            AerodromeReferenceType theAerodromeOfLoading;
            theAerodromeOfLoading = this.getAerodromeOfLoading();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "aerodromeOfLoading", theAerodromeOfLoading), currentHashCode, theAerodromeOfLoading);
        }
        {
            AerodromeReferenceType theAerodromeOfUnloading;
            theAerodromeOfUnloading = this.getAerodromeOfUnloading();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "aerodromeOfUnloading", theAerodromeOfUnloading), currentHashCode, theAerodromeOfUnloading);
        }
        {
            StructuredPostalAddressType theConsignee;
            theConsignee = this.getConsignee();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "consignee", theConsignee), currentHashCode, theConsignee);
        }
        {
            DeclarationTextType theDeclarationText;
            theDeclarationText = this.getDeclarationText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "declarationText", theDeclarationText), currentHashCode, theDeclarationText);
        }
        {
            StructuredPostalAddressType theShipper;
            theShipper = this.getShipper();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipper", theShipper), currentHashCode, theShipper);
        }
        {
            List<String> theTransferAerodromes;
            theTransferAerodromes = (((this.transferAerodromes!= null)&&(!this.transferAerodromes.isEmpty()))?this.getTransferAerodromes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transferAerodromes", theTransferAerodromes), currentHashCode, theTransferAerodromes);
        }
        {
            String theDangerousGoodsScreeningLocation;
            theDangerousGoodsScreeningLocation = this.getDangerousGoodsScreeningLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dangerousGoodsScreeningLocation", theDangerousGoodsScreeningLocation), currentHashCode, theDangerousGoodsScreeningLocation);
        }
        {
            String theDepartureCountry;
            theDepartureCountry = this.getDepartureCountry();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "departureCountry", theDepartureCountry), currentHashCode, theDepartureCountry);
        }
        {
            String theDestinationCountry;
            theDestinationCountry = this.getDestinationCountry();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "destinationCountry", theDestinationCountry), currentHashCode, theDestinationCountry);
        }
        {
            String theOriginCountry;
            theOriginCountry = this.getOriginCountry();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "originCountry", theOriginCountry), currentHashCode, theOriginCountry);
        }
        {
            String theShipmentAuthorizations;
            theShipmentAuthorizations = this.getShipmentAuthorizations();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipmentAuthorizations", theShipmentAuthorizations), currentHashCode, theShipmentAuthorizations);
        }
        {
            String theSubsidiaryHazardClassAndDivision;
            theSubsidiaryHazardClassAndDivision = this.getSubsidiaryHazardClassAndDivision();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subsidiaryHazardClassAndDivision", theSubsidiaryHazardClassAndDivision), currentHashCode, theSubsidiaryHazardClassAndDivision);
        }
        {
            String theSupplementaryInformation;
            theSupplementaryInformation = this.getSupplementaryInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplementaryInformation", theSupplementaryInformation), currentHashCode, theSupplementaryInformation);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
