//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.ExtensibleType;
import dev.ale.fdx.entity.base.IcaoUnitReferenceType;


/**
 * 
 *             Groups emergency information (description, phase, position, etc) for the flight. 
 *             
 *          
 * 
 * <p>Java class for FlightEmergencyType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FlightEmergencyType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="lastContact" type="{http://www.fixm.aero/flight/4.1}LastContactType" minOccurs="0"/>
 *         &lt;element name="originator" type="{http://www.fixm.aero/base/4.1}IcaoUnitReferenceType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="actionTaken" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="emergencyDescription" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="otherInformation" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="phase" type="{http://www.fixm.aero/flight/4.1}EmergencyPhaseType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightEmergencyType", propOrder = {
    "lastContact",
    "originator"
})
@Entity(name = "FlightEmergencyType")
@Table(name = "FLIGHTEMERGENCYTYPE")
public class FlightEmergencyType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected LastContactType lastContact;
    protected IcaoUnitReferenceType originator;
    @XmlAttribute(name = "actionTaken")
    protected String actionTaken;
    @XmlAttribute(name = "emergencyDescription")
    protected String emergencyDescription;
    @XmlAttribute(name = "otherInformation")
    protected String otherInformation;
    @XmlAttribute(name = "phase")
    protected EmergencyPhaseType phase;

    /**
     * Gets the value of the lastContact property.
     * 
     * @return
     *     possible object is
     *     {@link LastContactType }
     *     
     */
    @ManyToOne(targetEntity = LastContactType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LASTCONTACT_FLIGHTEMERGENCYT_0")
    public LastContactType getLastContact() {
        return lastContact;
    }

    /**
     * Sets the value of the lastContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link LastContactType }
     *     
     */
    public void setLastContact(LastContactType value) {
        this.lastContact = value;
    }

    /**
     * Gets the value of the originator property.
     * 
     * @return
     *     possible object is
     *     {@link IcaoUnitReferenceType }
     *     
     */
    @ManyToOne(targetEntity = IcaoUnitReferenceType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ORIGINATOR_FLIGHTEMERGENCYTY_0")
    public IcaoUnitReferenceType getOriginator() {
        return originator;
    }

    /**
     * Sets the value of the originator property.
     * 
     * @param value
     *     allowed object is
     *     {@link IcaoUnitReferenceType }
     *     
     */
    public void setOriginator(IcaoUnitReferenceType value) {
        this.originator = value;
    }

    /**
     * Gets the value of the actionTaken property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ACTIONTAKEN", length = 4096)
    public String getActionTaken() {
        return actionTaken;
    }

    /**
     * Sets the value of the actionTaken property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setActionTaken(String value) {
        this.actionTaken = value;
    }

    /**
     * Gets the value of the emergencyDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EMERGENCYDESCRIPTION", length = 4096)
    public String getEmergencyDescription() {
        return emergencyDescription;
    }

    /**
     * Sets the value of the emergencyDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmergencyDescription(String value) {
        this.emergencyDescription = value;
    }

    /**
     * Gets the value of the otherInformation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHERINFORMATION", length = 4096)
    public String getOtherInformation() {
        return otherInformation;
    }

    /**
     * Sets the value of the otherInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherInformation(String value) {
        this.otherInformation = value;
    }

    /**
     * Gets the value of the phase property.
     * 
     * @return
     *     possible object is
     *     {@link EmergencyPhaseType }
     *     
     */
    @Basic
    @Column(name = "PHASE", length = 255)
    @Enumerated(EnumType.STRING)
    public EmergencyPhaseType getPhase() {
        return phase;
    }

    /**
     * Sets the value of the phase property.
     * 
     * @param value
     *     allowed object is
     *     {@link EmergencyPhaseType }
     *     
     */
    public void setPhase(EmergencyPhaseType value) {
        this.phase = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FlightEmergencyType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final FlightEmergencyType that = ((FlightEmergencyType) object);
        {
            LastContactType lhsLastContact;
            lhsLastContact = this.getLastContact();
            LastContactType rhsLastContact;
            rhsLastContact = that.getLastContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastContact", lhsLastContact), LocatorUtils.property(thatLocator, "lastContact", rhsLastContact), lhsLastContact, rhsLastContact)) {
                return false;
            }
        }
        {
            IcaoUnitReferenceType lhsOriginator;
            lhsOriginator = this.getOriginator();
            IcaoUnitReferenceType rhsOriginator;
            rhsOriginator = that.getOriginator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "originator", lhsOriginator), LocatorUtils.property(thatLocator, "originator", rhsOriginator), lhsOriginator, rhsOriginator)) {
                return false;
            }
        }
        {
            String lhsActionTaken;
            lhsActionTaken = this.getActionTaken();
            String rhsActionTaken;
            rhsActionTaken = that.getActionTaken();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "actionTaken", lhsActionTaken), LocatorUtils.property(thatLocator, "actionTaken", rhsActionTaken), lhsActionTaken, rhsActionTaken)) {
                return false;
            }
        }
        {
            String lhsEmergencyDescription;
            lhsEmergencyDescription = this.getEmergencyDescription();
            String rhsEmergencyDescription;
            rhsEmergencyDescription = that.getEmergencyDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emergencyDescription", lhsEmergencyDescription), LocatorUtils.property(thatLocator, "emergencyDescription", rhsEmergencyDescription), lhsEmergencyDescription, rhsEmergencyDescription)) {
                return false;
            }
        }
        {
            String lhsOtherInformation;
            lhsOtherInformation = this.getOtherInformation();
            String rhsOtherInformation;
            rhsOtherInformation = that.getOtherInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherInformation", lhsOtherInformation), LocatorUtils.property(thatLocator, "otherInformation", rhsOtherInformation), lhsOtherInformation, rhsOtherInformation)) {
                return false;
            }
        }
        {
            EmergencyPhaseType lhsPhase;
            lhsPhase = this.getPhase();
            EmergencyPhaseType rhsPhase;
            rhsPhase = that.getPhase();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phase", lhsPhase), LocatorUtils.property(thatLocator, "phase", rhsPhase), lhsPhase, rhsPhase)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            LastContactType theLastContact;
            theLastContact = this.getLastContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastContact", theLastContact), currentHashCode, theLastContact);
        }
        {
            IcaoUnitReferenceType theOriginator;
            theOriginator = this.getOriginator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "originator", theOriginator), currentHashCode, theOriginator);
        }
        {
            String theActionTaken;
            theActionTaken = this.getActionTaken();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "actionTaken", theActionTaken), currentHashCode, theActionTaken);
        }
        {
            String theEmergencyDescription;
            theEmergencyDescription = this.getEmergencyDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emergencyDescription", theEmergencyDescription), currentHashCode, theEmergencyDescription);
        }
        {
            String theOtherInformation;
            theOtherInformation = this.getOtherInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherInformation", theOtherInformation), currentHashCode, theOtherInformation);
        }
        {
            EmergencyPhaseType thePhase;
            thePhase = this.getPhase();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phase", thePhase), currentHashCode, thePhase);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
