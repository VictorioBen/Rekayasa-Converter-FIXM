//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.ExtensibleType;
import dev.ale.fdx.entity.base.WeightType;


/**
 * 
 *             Groups and associates a Route and Trajectory. 
 *          
 * 
 * <p>Java class for RouteTrajectoryType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RouteTrajectoryType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="climbProfile" type="{http://www.fixm.aero/flight/4.1}PerformanceProfileType" minOccurs="0"/>
 *         &lt;element name="climbSchedule" type="{http://www.fixm.aero/flight/4.1}SpeedScheduleType" minOccurs="0"/>
 *         &lt;element name="descentProfile" type="{http://www.fixm.aero/flight/4.1}PerformanceProfileType" minOccurs="0"/>
 *         &lt;element name="descentSchedule" type="{http://www.fixm.aero/flight/4.1}SpeedScheduleType" minOccurs="0"/>
 *         &lt;element name="element" type="{http://www.fixm.aero/flight/4.1}FlightRouteElementType" maxOccurs="2000" minOccurs="0"/>
 *         &lt;element name="routeInformation" type="{http://www.fixm.aero/flight/4.1}FlightRouteInformationType" minOccurs="0"/>
 *         &lt;element name="takeoffWeight" type="{http://www.fixm.aero/base/4.1}WeightType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RouteTrajectoryType", propOrder = {
    "climbProfile",
    "climbSchedule",
    "descentProfile",
    "descentSchedule",
    "element",
    "routeInformation",
    "takeoffWeight"
})
@Entity(name = "RouteTrajectoryType")
@Table(name = "ROUTETRAJECTORYTYPE")
public class RouteTrajectoryType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected PerformanceProfileType climbProfile;
    protected SpeedScheduleType climbSchedule;
    protected PerformanceProfileType descentProfile;
    protected SpeedScheduleType descentSchedule;
    protected List<FlightRouteElementType> element;
    protected FlightRouteInformationType routeInformation;
    protected WeightType takeoffWeight;

    /**
     * Gets the value of the climbProfile property.
     * 
     * @return
     *     possible object is
     *     {@link PerformanceProfileType }
     *     
     */
    @ManyToOne(targetEntity = PerformanceProfileType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CLIMBPROFILE_ROUTETRAJECTORY_0")
    public PerformanceProfileType getClimbProfile() {
        return climbProfile;
    }

    /**
     * Sets the value of the climbProfile property.
     * 
     * @param value
     *     allowed object is
     *     {@link PerformanceProfileType }
     *     
     */
    public void setClimbProfile(PerformanceProfileType value) {
        this.climbProfile = value;
    }

    /**
     * Gets the value of the climbSchedule property.
     * 
     * @return
     *     possible object is
     *     {@link SpeedScheduleType }
     *     
     */
    @ManyToOne(targetEntity = SpeedScheduleType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CLIMBSCHEDULE_ROUTETRAJECTOR_0")
    public SpeedScheduleType getClimbSchedule() {
        return climbSchedule;
    }

    /**
     * Sets the value of the climbSchedule property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpeedScheduleType }
     *     
     */
    public void setClimbSchedule(SpeedScheduleType value) {
        this.climbSchedule = value;
    }

    /**
     * Gets the value of the descentProfile property.
     * 
     * @return
     *     possible object is
     *     {@link PerformanceProfileType }
     *     
     */
    @ManyToOne(targetEntity = PerformanceProfileType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DESCENTPROFILE_ROUTETRAJECTO_0")
    public PerformanceProfileType getDescentProfile() {
        return descentProfile;
    }

    /**
     * Sets the value of the descentProfile property.
     * 
     * @param value
     *     allowed object is
     *     {@link PerformanceProfileType }
     *     
     */
    public void setDescentProfile(PerformanceProfileType value) {
        this.descentProfile = value;
    }

    /**
     * Gets the value of the descentSchedule property.
     * 
     * @return
     *     possible object is
     *     {@link SpeedScheduleType }
     *     
     */
    @ManyToOne(targetEntity = SpeedScheduleType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DESCENTSCHEDULE_ROUTETRAJECT_0")
    public SpeedScheduleType getDescentSchedule() {
        return descentSchedule;
    }

    /**
     * Sets the value of the descentSchedule property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpeedScheduleType }
     *     
     */
    public void setDescentSchedule(SpeedScheduleType value) {
        this.descentSchedule = value;
    }

    /**
     * Gets the value of the element property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the element property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FlightRouteElementType }
     * 
     * 
     */
    @OneToMany(targetEntity = FlightRouteElementType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ELEMENT_ROUTETRAJECTORYTYPE__0")
    public List<FlightRouteElementType> getElement() {
        if (element == null) {
            element = new ArrayList<FlightRouteElementType>();
        }
        return this.element;
    }

    /**
     * 
     * 
     */
    public void setElement(List<FlightRouteElementType> element) {
        this.element = element;
    }

    /**
     * Gets the value of the routeInformation property.
     * 
     * @return
     *     possible object is
     *     {@link FlightRouteInformationType }
     *     
     */
    @ManyToOne(targetEntity = FlightRouteInformationType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ROUTEINFORMATION_ROUTETRAJEC_0")
    public FlightRouteInformationType getRouteInformation() {
        return routeInformation;
    }

    /**
     * Sets the value of the routeInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link FlightRouteInformationType }
     *     
     */
    public void setRouteInformation(FlightRouteInformationType value) {
        this.routeInformation = value;
    }

    /**
     * Gets the value of the takeoffWeight property.
     * 
     * @return
     *     possible object is
     *     {@link WeightType }
     *     
     */
    @ManyToOne(targetEntity = WeightType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TAKEOFFWEIGHT_ROUTETRAJECTOR_0")
    public WeightType getTakeoffWeight() {
        return takeoffWeight;
    }

    /**
     * Sets the value of the takeoffWeight property.
     * 
     * @param value
     *     allowed object is
     *     {@link WeightType }
     *     
     */
    public void setTakeoffWeight(WeightType value) {
        this.takeoffWeight = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RouteTrajectoryType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final RouteTrajectoryType that = ((RouteTrajectoryType) object);
        {
            PerformanceProfileType lhsClimbProfile;
            lhsClimbProfile = this.getClimbProfile();
            PerformanceProfileType rhsClimbProfile;
            rhsClimbProfile = that.getClimbProfile();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "climbProfile", lhsClimbProfile), LocatorUtils.property(thatLocator, "climbProfile", rhsClimbProfile), lhsClimbProfile, rhsClimbProfile)) {
                return false;
            }
        }
        {
            SpeedScheduleType lhsClimbSchedule;
            lhsClimbSchedule = this.getClimbSchedule();
            SpeedScheduleType rhsClimbSchedule;
            rhsClimbSchedule = that.getClimbSchedule();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "climbSchedule", lhsClimbSchedule), LocatorUtils.property(thatLocator, "climbSchedule", rhsClimbSchedule), lhsClimbSchedule, rhsClimbSchedule)) {
                return false;
            }
        }
        {
            PerformanceProfileType lhsDescentProfile;
            lhsDescentProfile = this.getDescentProfile();
            PerformanceProfileType rhsDescentProfile;
            rhsDescentProfile = that.getDescentProfile();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "descentProfile", lhsDescentProfile), LocatorUtils.property(thatLocator, "descentProfile", rhsDescentProfile), lhsDescentProfile, rhsDescentProfile)) {
                return false;
            }
        }
        {
            SpeedScheduleType lhsDescentSchedule;
            lhsDescentSchedule = this.getDescentSchedule();
            SpeedScheduleType rhsDescentSchedule;
            rhsDescentSchedule = that.getDescentSchedule();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "descentSchedule", lhsDescentSchedule), LocatorUtils.property(thatLocator, "descentSchedule", rhsDescentSchedule), lhsDescentSchedule, rhsDescentSchedule)) {
                return false;
            }
        }
        {
            List<FlightRouteElementType> lhsElement;
            lhsElement = (((this.element!= null)&&(!this.element.isEmpty()))?this.getElement():null);
            List<FlightRouteElementType> rhsElement;
            rhsElement = (((that.element!= null)&&(!that.element.isEmpty()))?that.getElement():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "element", lhsElement), LocatorUtils.property(thatLocator, "element", rhsElement), lhsElement, rhsElement)) {
                return false;
            }
        }
        {
            FlightRouteInformationType lhsRouteInformation;
            lhsRouteInformation = this.getRouteInformation();
            FlightRouteInformationType rhsRouteInformation;
            rhsRouteInformation = that.getRouteInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "routeInformation", lhsRouteInformation), LocatorUtils.property(thatLocator, "routeInformation", rhsRouteInformation), lhsRouteInformation, rhsRouteInformation)) {
                return false;
            }
        }
        {
            WeightType lhsTakeoffWeight;
            lhsTakeoffWeight = this.getTakeoffWeight();
            WeightType rhsTakeoffWeight;
            rhsTakeoffWeight = that.getTakeoffWeight();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "takeoffWeight", lhsTakeoffWeight), LocatorUtils.property(thatLocator, "takeoffWeight", rhsTakeoffWeight), lhsTakeoffWeight, rhsTakeoffWeight)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            PerformanceProfileType theClimbProfile;
            theClimbProfile = this.getClimbProfile();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "climbProfile", theClimbProfile), currentHashCode, theClimbProfile);
        }
        {
            SpeedScheduleType theClimbSchedule;
            theClimbSchedule = this.getClimbSchedule();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "climbSchedule", theClimbSchedule), currentHashCode, theClimbSchedule);
        }
        {
            PerformanceProfileType theDescentProfile;
            theDescentProfile = this.getDescentProfile();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "descentProfile", theDescentProfile), currentHashCode, theDescentProfile);
        }
        {
            SpeedScheduleType theDescentSchedule;
            theDescentSchedule = this.getDescentSchedule();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "descentSchedule", theDescentSchedule), currentHashCode, theDescentSchedule);
        }
        {
            List<FlightRouteElementType> theElement;
            theElement = (((this.element!= null)&&(!this.element.isEmpty()))?this.getElement():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "element", theElement), currentHashCode, theElement);
        }
        {
            FlightRouteInformationType theRouteInformation;
            theRouteInformation = this.getRouteInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "routeInformation", theRouteInformation), currentHashCode, theRouteInformation);
        }
        {
            WeightType theTakeoffWeight;
            theTakeoffWeight = this.getTakeoffWeight();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "takeoffWeight", theTakeoffWeight), currentHashCode, theTakeoffWeight);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
