//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.base;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.flight.AltitudeInTransitionType;


/**
 * 
 *             The Choice between flight level or altitude specification. 
 *          
 * 
 * <p>Java class for FlightLevelOrAltitudeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FlightLevelOrAltitudeType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;choice>
 *         &lt;element name="altitude" type="{http://www.fixm.aero/base/4.1}AltitudeType" minOccurs="0"/>
 *         &lt;element name="flightLevel" type="{http://www.fixm.aero/base/4.1}FlightLevelType" minOccurs="0"/>
 *       &lt;/choice>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightLevelOrAltitudeType", propOrder = {
    "altitude",
    "flightLevel"
})
@XmlSeeAlso({
    AltitudeInTransitionType.class
})
@Entity(name = "FlightLevelOrAltitudeType")
@Table(name = "FLIGHTLEVELORALTITUDETYPE")
public class FlightLevelOrAltitudeType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected AltitudeType altitude;
    protected FlightLevelType flightLevel;

    /**
     * Gets the value of the altitude property.
     * 
     * @return
     *     possible object is
     *     {@link AltitudeType }
     *     
     */
    @ManyToOne(targetEntity = AltitudeType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ALTITUDE_FLIGHTLEVELORALTITU_0")
    public AltitudeType getAltitude() {
        return altitude;
    }

    /**
     * Sets the value of the altitude property.
     * 
     * @param value
     *     allowed object is
     *     {@link AltitudeType }
     *     
     */
    public void setAltitude(AltitudeType value) {
        this.altitude = value;
    }

    /**
     * Gets the value of the flightLevel property.
     * 
     * @return
     *     possible object is
     *     {@link FlightLevelType }
     *     
     */
    @ManyToOne(targetEntity = FlightLevelType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "FLIGHTLEVEL_FLIGHTLEVELORALT_0")
    public FlightLevelType getFlightLevel() {
        return flightLevel;
    }

    /**
     * Sets the value of the flightLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link FlightLevelType }
     *     
     */
    public void setFlightLevel(FlightLevelType value) {
        this.flightLevel = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FlightLevelOrAltitudeType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final FlightLevelOrAltitudeType that = ((FlightLevelOrAltitudeType) object);
        {
            AltitudeType lhsAltitude;
            lhsAltitude = this.getAltitude();
            AltitudeType rhsAltitude;
            rhsAltitude = that.getAltitude();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "altitude", lhsAltitude), LocatorUtils.property(thatLocator, "altitude", rhsAltitude), lhsAltitude, rhsAltitude)) {
                return false;
            }
        }
        {
            FlightLevelType lhsFlightLevel;
            lhsFlightLevel = this.getFlightLevel();
            FlightLevelType rhsFlightLevel;
            rhsFlightLevel = that.getFlightLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "flightLevel", lhsFlightLevel), LocatorUtils.property(thatLocator, "flightLevel", rhsFlightLevel), lhsFlightLevel, rhsFlightLevel)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            AltitudeType theAltitude;
            theAltitude = this.getAltitude();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "altitude", theAltitude), currentHashCode, theAltitude);
        }
        {
            FlightLevelType theFlightLevel;
            theFlightLevel = this.getFlightLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "flightLevel", theFlightLevel), currentHashCode, theFlightLevel);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
