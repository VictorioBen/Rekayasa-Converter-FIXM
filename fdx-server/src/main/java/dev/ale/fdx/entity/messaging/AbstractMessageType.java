//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.messaging;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDateTime;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.ExtensibleType;
import dev.ale.fdx.entity.base.ExtensionType;
import dev.ale.fdx.entity.base.PersonOrOrganizationType;


/**
 * 
 *             An abstract class that specializes into Message or Message Collection and holds their 
 *             common properties. [FIXM] 
 *             
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;deprecated xmlns="http://www.w3.org/2001/XMLSchema" xmlns:fb="http://www.fixm.aero/base/4.1" xmlns:fx="http://www.fixm.aero/flight/4.1" xmlns:mesg="http://www.fixm.aero/messaging/4.1" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;&lt;deletionVersion&gt;Not Specified Yet.&lt;/deletionVersion&gt;&lt;deprecationVersion&gt;4.1.0&lt;/deprecationVersion&gt;&lt;rationale&gt;CR #28&lt;/rationale&gt;&lt;replacement&gt;N/A. See the FIXM Implementation guidance for recommendations about messages.&lt;/replacement&gt;&lt;/deprecated&gt;
 * </pre>
 * 
 * 
 * <p>Java class for AbstractMessageType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AbstractMessageType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="deliveryResponsibility" type="{http://www.fixm.aero/base/4.1}PersonOrOrganizationType" minOccurs="0"/>
 *         &lt;element name="extensions" type="{http://www.fixm.aero/base/4.1}ExtensionType" maxOccurs="2000" minOccurs="0"/>
 *         &lt;element name="messageOriginator" type="{http://www.fixm.aero/base/4.1}PersonOrOrganizationType" minOccurs="0"/>
 *         &lt;element name="recipient" type="{http://www.fixm.aero/base/4.1}PersonOrOrganizationType" maxOccurs="2000" minOccurs="0"/>
 *         &lt;element name="uniqueMessageIdentifier" type="{http://www.fixm.aero/messaging/4.1}FIXMUniqueMessageIdentifierType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="messageDateTime" type="{http://www.fixm.aero/base/4.1}TimeType" />
 *       &lt;attribute name="messageType" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AbstractMessageType", propOrder = {
    "deliveryResponsibility",
    "extensions",
    "messageOriginator",
    "recipient",
    "uniqueMessageIdentifier"
})
@XmlSeeAlso({
    MessageCollectionType.class,
    MessageType.class
})
@Entity(name = "AbstractMessageType")
@Table(name = "ABSTRACTMESSAGETYPE")
public abstract class AbstractMessageType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected PersonOrOrganizationType deliveryResponsibility;
    protected List<ExtensionType> extensions;
    protected PersonOrOrganizationType messageOriginator;
    protected List<PersonOrOrganizationType> recipient;
    protected FIXMUniqueMessageIdentifierType uniqueMessageIdentifier;
    @XmlAttribute(name = "messageDateTime")
    protected XMLGregorianCalendar messageDateTime;
    @XmlAttribute(name = "messageType")
    protected String messageType;

    /**
     * Gets the value of the deliveryResponsibility property.
     * 
     * @return
     *     possible object is
     *     {@link PersonOrOrganizationType }
     *     
     */
    @ManyToOne(targetEntity = PersonOrOrganizationType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DELIVERYRESPONSIBILITY_ABSTR_0")
    public PersonOrOrganizationType getDeliveryResponsibility() {
        return deliveryResponsibility;
    }

    /**
     * Sets the value of the deliveryResponsibility property.
     * 
     * @param value
     *     allowed object is
     *     {@link PersonOrOrganizationType }
     *     
     */
    public void setDeliveryResponsibility(PersonOrOrganizationType value) {
        this.deliveryResponsibility = value;
    }

    /**
     * Gets the value of the extensions property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extensions property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtensions().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExtensionType }
     * 
     * 
     */
    @OneToMany(targetEntity = ExtensionType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "EXTENSIONS_ABSTRACTMESSAGETY_0")
    public List<ExtensionType> getExtensions() {
        if (extensions == null) {
            extensions = new ArrayList<ExtensionType>();
        }
        return this.extensions;
    }

    /**
     * 
     * 
     */
    public void setExtensions(List<ExtensionType> extensions) {
        this.extensions = extensions;
    }

    /**
     * Gets the value of the messageOriginator property.
     * 
     * @return
     *     possible object is
     *     {@link PersonOrOrganizationType }
     *     
     */
    @ManyToOne(targetEntity = PersonOrOrganizationType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MESSAGEORIGINATOR_ABSTRACTME_0")
    public PersonOrOrganizationType getMessageOriginator() {
        return messageOriginator;
    }

    /**
     * Sets the value of the messageOriginator property.
     * 
     * @param value
     *     allowed object is
     *     {@link PersonOrOrganizationType }
     *     
     */
    public void setMessageOriginator(PersonOrOrganizationType value) {
        this.messageOriginator = value;
    }

    /**
     * Gets the value of the recipient property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the recipient property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRecipient().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PersonOrOrganizationType }
     * 
     * 
     */
    @OneToMany(targetEntity = PersonOrOrganizationType.class, cascade = {
        CascadeType.ALL
    },fetch = FetchType.LAZY)
    @LazyCollection(LazyCollectionOption.FALSE)
    @JoinColumn(name = "RECIPIENT_ABSTRACTMESSAGETYP_0")
    public List<PersonOrOrganizationType> getRecipient() {
        if (recipient == null) {
            recipient = new ArrayList<PersonOrOrganizationType>();
        }
        return this.recipient;
    }

    /**
     * 
     * 
     */
    public void setRecipient(List<PersonOrOrganizationType> recipient) {
        this.recipient = recipient;
    }

    /**
     * Gets the value of the uniqueMessageIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link FIXMUniqueMessageIdentifierType }
     *     
     */
    @ManyToOne(targetEntity = FIXMUniqueMessageIdentifierType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "UNIQUEMESSAGEIDENTIFIER_ABST_0")
    public FIXMUniqueMessageIdentifierType getUniqueMessageIdentifier() {
        return uniqueMessageIdentifier;
    }

    /**
     * Sets the value of the uniqueMessageIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link FIXMUniqueMessageIdentifierType }
     *     
     */
    public void setUniqueMessageIdentifier(FIXMUniqueMessageIdentifierType value) {
        this.uniqueMessageIdentifier = value;
    }

    /**
     * Gets the value of the messageDateTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getMessageDateTime() {
        return messageDateTime;
    }

    /**
     * Sets the value of the messageDateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setMessageDateTime(XMLGregorianCalendar value) {
        this.messageDateTime = value;
    }

    /**
     * Gets the value of the messageType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MESSAGETYPE", length = 4096)
    public String getMessageType() {
        return messageType;
    }

    /**
     * Sets the value of the messageType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMessageType(String value) {
        this.messageType = value;
    }

    @Basic
    @Column(name = "MESSAGEDATETIMEITEM")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getMessageDateTimeItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDateTime.class, this.getMessageDateTime());
    }

    public void setMessageDateTimeItem(Date target) {
        setMessageDateTime(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDateTime.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AbstractMessageType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final AbstractMessageType that = ((AbstractMessageType) object);
        {
            PersonOrOrganizationType lhsDeliveryResponsibility;
            lhsDeliveryResponsibility = this.getDeliveryResponsibility();
            PersonOrOrganizationType rhsDeliveryResponsibility;
            rhsDeliveryResponsibility = that.getDeliveryResponsibility();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deliveryResponsibility", lhsDeliveryResponsibility), LocatorUtils.property(thatLocator, "deliveryResponsibility", rhsDeliveryResponsibility), lhsDeliveryResponsibility, rhsDeliveryResponsibility)) {
                return false;
            }
        }
        {
            List<ExtensionType> lhsExtensions;
            lhsExtensions = (((this.extensions!= null)&&(!this.extensions.isEmpty()))?this.getExtensions():null);
            List<ExtensionType> rhsExtensions;
            rhsExtensions = (((that.extensions!= null)&&(!that.extensions.isEmpty()))?that.getExtensions():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extensions", lhsExtensions), LocatorUtils.property(thatLocator, "extensions", rhsExtensions), lhsExtensions, rhsExtensions)) {
                return false;
            }
        }
        {
            PersonOrOrganizationType lhsMessageOriginator;
            lhsMessageOriginator = this.getMessageOriginator();
            PersonOrOrganizationType rhsMessageOriginator;
            rhsMessageOriginator = that.getMessageOriginator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageOriginator", lhsMessageOriginator), LocatorUtils.property(thatLocator, "messageOriginator", rhsMessageOriginator), lhsMessageOriginator, rhsMessageOriginator)) {
                return false;
            }
        }
        {
            List<PersonOrOrganizationType> lhsRecipient;
            lhsRecipient = (((this.recipient!= null)&&(!this.recipient.isEmpty()))?this.getRecipient():null);
            List<PersonOrOrganizationType> rhsRecipient;
            rhsRecipient = (((that.recipient!= null)&&(!that.recipient.isEmpty()))?that.getRecipient():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recipient", lhsRecipient), LocatorUtils.property(thatLocator, "recipient", rhsRecipient), lhsRecipient, rhsRecipient)) {
                return false;
            }
        }
        {
            FIXMUniqueMessageIdentifierType lhsUniqueMessageIdentifier;
            lhsUniqueMessageIdentifier = this.getUniqueMessageIdentifier();
            FIXMUniqueMessageIdentifierType rhsUniqueMessageIdentifier;
            rhsUniqueMessageIdentifier = that.getUniqueMessageIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uniqueMessageIdentifier", lhsUniqueMessageIdentifier), LocatorUtils.property(thatLocator, "uniqueMessageIdentifier", rhsUniqueMessageIdentifier), lhsUniqueMessageIdentifier, rhsUniqueMessageIdentifier)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsMessageDateTime;
            lhsMessageDateTime = this.getMessageDateTime();
            XMLGregorianCalendar rhsMessageDateTime;
            rhsMessageDateTime = that.getMessageDateTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageDateTime", lhsMessageDateTime), LocatorUtils.property(thatLocator, "messageDateTime", rhsMessageDateTime), lhsMessageDateTime, rhsMessageDateTime)) {
                return false;
            }
        }
        {
            String lhsMessageType;
            lhsMessageType = this.getMessageType();
            String rhsMessageType;
            rhsMessageType = that.getMessageType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageType", lhsMessageType), LocatorUtils.property(thatLocator, "messageType", rhsMessageType), lhsMessageType, rhsMessageType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            PersonOrOrganizationType theDeliveryResponsibility;
            theDeliveryResponsibility = this.getDeliveryResponsibility();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deliveryResponsibility", theDeliveryResponsibility), currentHashCode, theDeliveryResponsibility);
        }
        {
            List<ExtensionType> theExtensions;
            theExtensions = (((this.extensions!= null)&&(!this.extensions.isEmpty()))?this.getExtensions():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extensions", theExtensions), currentHashCode, theExtensions);
        }
        {
            PersonOrOrganizationType theMessageOriginator;
            theMessageOriginator = this.getMessageOriginator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageOriginator", theMessageOriginator), currentHashCode, theMessageOriginator);
        }
        {
            List<PersonOrOrganizationType> theRecipient;
            theRecipient = (((this.recipient!= null)&&(!this.recipient.isEmpty()))?this.getRecipient():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recipient", theRecipient), currentHashCode, theRecipient);
        }
        {
            FIXMUniqueMessageIdentifierType theUniqueMessageIdentifier;
            theUniqueMessageIdentifier = this.getUniqueMessageIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uniqueMessageIdentifier", theUniqueMessageIdentifier), currentHashCode, theUniqueMessageIdentifier);
        }
        {
            XMLGregorianCalendar theMessageDateTime;
            theMessageDateTime = this.getMessageDateTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageDateTime", theMessageDateTime), currentHashCode, theMessageDateTime);
        }
        {
            String theMessageType;
            theMessageType = this.getMessageType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageType", theMessageType), currentHashCode, theMessageType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
