//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import java.math.BigDecimal;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 *             A statement identifying the dangerous goods listed are all contained within the same 
 *             outer packaging. 
 *          
 * 
 * <p>Java class for AllPackedInOneType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AllPackedInOneType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="numberOfPackages" type="{http://www.fixm.aero/base/4.1}CountType" />
 *       &lt;attribute name="qValue">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.fixm.aero/base/4.1}DecimalIndexType">
 *             &lt;maxInclusive value="1.0"/>
 *             &lt;minInclusive value="0.0"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AllPackedInOneType")
@Entity(name = "AllPackedInOneType")
@Table(name = "ALLPACKEDINONETYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class AllPackedInOneType
    implements Equals, HashCode
{

    @XmlAttribute(name = "numberOfPackages")
    protected Integer numberOfPackages;
    @XmlAttribute(name = "qValue")
    protected BigDecimal qValue;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the numberOfPackages property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "NUMBEROFPACKAGES", precision = 10, scale = 0)
    public Integer getNumberOfPackages() {
        return numberOfPackages;
    }

    /**
     * Sets the value of the numberOfPackages property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumberOfPackages(Integer value) {
        this.numberOfPackages = value;
    }

    /**
     * Gets the value of the qValue property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "QVALUE", precision = 4, scale = 1)
    public BigDecimal getQValue() {
        return qValue;
    }

    /**
     * Sets the value of the qValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setQValue(BigDecimal value) {
        this.qValue = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AllPackedInOneType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AllPackedInOneType that = ((AllPackedInOneType) object);
        {
            Integer lhsNumberOfPackages;
            lhsNumberOfPackages = this.getNumberOfPackages();
            Integer rhsNumberOfPackages;
            rhsNumberOfPackages = that.getNumberOfPackages();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberOfPackages", lhsNumberOfPackages), LocatorUtils.property(thatLocator, "numberOfPackages", rhsNumberOfPackages), lhsNumberOfPackages, rhsNumberOfPackages)) {
                return false;
            }
        }
        {
            BigDecimal lhsQValue;
            lhsQValue = this.getQValue();
            BigDecimal rhsQValue;
            rhsQValue = that.getQValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qValue", lhsQValue), LocatorUtils.property(thatLocator, "qValue", rhsQValue), lhsQValue, rhsQValue)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Integer theNumberOfPackages;
            theNumberOfPackages = this.getNumberOfPackages();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberOfPackages", theNumberOfPackages), currentHashCode, theNumberOfPackages);
        }
        {
            BigDecimal theQValue;
            theQValue = this.getQValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qValue", theQValue), currentHashCode, theQValue);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
