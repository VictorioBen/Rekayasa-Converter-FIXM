//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.ExtensibleType;


/**
 * 
 *             Groups information regarding loss of radio communication capabilities. 
 *          
 * 
 * <p>Java class for RadioCommunicationFailureType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RadioCommunicationFailureType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="contact" type="{http://www.fixm.aero/flight/4.1}LastContactType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="radioFailureRemarks" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="remainingComCapability" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RadioCommunicationFailureType", propOrder = {
    "contact"
})
@Entity(name = "RadioCommunicationFailureType")
@Table(name = "RADIOCOMMUNICATIONFAILURETYPE")
public class RadioCommunicationFailureType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected LastContactType contact;
    @XmlAttribute(name = "radioFailureRemarks")
    protected String radioFailureRemarks;
    @XmlAttribute(name = "remainingComCapability")
    protected String remainingComCapability;

    /**
     * Gets the value of the contact property.
     * 
     * @return
     *     possible object is
     *     {@link LastContactType }
     *     
     */
    @ManyToOne(targetEntity = LastContactType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTACT_RADIOCOMMUNICATIONFA_0")
    public LastContactType getContact() {
        return contact;
    }

    /**
     * Sets the value of the contact property.
     * 
     * @param value
     *     allowed object is
     *     {@link LastContactType }
     *     
     */
    public void setContact(LastContactType value) {
        this.contact = value;
    }

    /**
     * Gets the value of the radioFailureRemarks property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RADIOFAILUREREMARKS", length = 4096)
    public String getRadioFailureRemarks() {
        return radioFailureRemarks;
    }

    /**
     * Sets the value of the radioFailureRemarks property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRadioFailureRemarks(String value) {
        this.radioFailureRemarks = value;
    }

    /**
     * Gets the value of the remainingComCapability property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "REMAININGCOMCAPABILITY", length = 4096)
    public String getRemainingComCapability() {
        return remainingComCapability;
    }

    /**
     * Sets the value of the remainingComCapability property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRemainingComCapability(String value) {
        this.remainingComCapability = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RadioCommunicationFailureType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final RadioCommunicationFailureType that = ((RadioCommunicationFailureType) object);
        {
            LastContactType lhsContact;
            lhsContact = this.getContact();
            LastContactType rhsContact;
            rhsContact = that.getContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contact", lhsContact), LocatorUtils.property(thatLocator, "contact", rhsContact), lhsContact, rhsContact)) {
                return false;
            }
        }
        {
            String lhsRadioFailureRemarks;
            lhsRadioFailureRemarks = this.getRadioFailureRemarks();
            String rhsRadioFailureRemarks;
            rhsRadioFailureRemarks = that.getRadioFailureRemarks();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "radioFailureRemarks", lhsRadioFailureRemarks), LocatorUtils.property(thatLocator, "radioFailureRemarks", rhsRadioFailureRemarks), lhsRadioFailureRemarks, rhsRadioFailureRemarks)) {
                return false;
            }
        }
        {
            String lhsRemainingComCapability;
            lhsRemainingComCapability = this.getRemainingComCapability();
            String rhsRemainingComCapability;
            rhsRemainingComCapability = that.getRemainingComCapability();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "remainingComCapability", lhsRemainingComCapability), LocatorUtils.property(thatLocator, "remainingComCapability", rhsRemainingComCapability), lhsRemainingComCapability, rhsRemainingComCapability)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            LastContactType theContact;
            theContact = this.getContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contact", theContact), currentHashCode, theContact);
        }
        {
            String theRadioFailureRemarks;
            theRadioFailureRemarks = this.getRadioFailureRemarks();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "radioFailureRemarks", theRadioFailureRemarks), currentHashCode, theRadioFailureRemarks);
        }
        {
            String theRemainingComCapability;
            theRemainingComCapability = this.getRemainingComCapability();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "remainingComCapability", theRemainingComCapability), currentHashCode, theRemainingComCapability);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
