//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.base;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 *             A data type used to represent direction in the coordinate reference system. [ISO 
 *             19107, chapter 6.3.12.1] 
 *              
 *             The value of a bearing indication (at a given point) is measured as the angle between 
 *             the bearing and either True North or Magnetic North. The angle is measured clockwise 
 *             from 0 degrees up to and including 360 degrees. The value can also be a VOR radial. 
 *              [AIXM 5.1] 
 *          
 * 
 * <p>Java class for BearingType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="BearingType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.fixm.aero/base/4.1>AngleType">
 *       &lt;attribute name="zeroBearingType" type="{http://www.fixm.aero/base/4.1}ZeroBearingTypeType" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BearingType")
@Entity(name = "BearingType")
@Table(name = "BEARINGTYPE")
public class BearingType
    extends AngleType
    implements Equals, HashCode
{

    @XmlAttribute(name = "zeroBearingType")
    protected ZeroBearingTypeType zeroBearingType;

    /**
     * Gets the value of the zeroBearingType property.
     * 
     * @return
     *     possible object is
     *     {@link ZeroBearingTypeType }
     *     
     */
    @Basic
    @Column(name = "ZEROBEARINGTYPE", length = 255)
    @Enumerated(EnumType.STRING)
    public ZeroBearingTypeType getZeroBearingType() {
        return zeroBearingType;
    }

    /**
     * Sets the value of the zeroBearingType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ZeroBearingTypeType }
     *     
     */
    public void setZeroBearingType(ZeroBearingTypeType value) {
        this.zeroBearingType = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof BearingType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final BearingType that = ((BearingType) object);
        {
            ZeroBearingTypeType lhsZeroBearingType;
            lhsZeroBearingType = this.getZeroBearingType();
            ZeroBearingTypeType rhsZeroBearingType;
            rhsZeroBearingType = that.getZeroBearingType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "zeroBearingType", lhsZeroBearingType), LocatorUtils.property(thatLocator, "zeroBearingType", rhsZeroBearingType), lhsZeroBearingType, rhsZeroBearingType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ZeroBearingTypeType theZeroBearingType;
            theZeroBearingType = this.getZeroBearingType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "zeroBearingType", theZeroBearingType), currentHashCode, theZeroBearingType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
