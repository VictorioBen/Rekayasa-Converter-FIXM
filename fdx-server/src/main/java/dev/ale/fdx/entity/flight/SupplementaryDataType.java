//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.Duration;

import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.DurationAsString;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.ExtensibleType;
import dev.ale.fdx.entity.base.PersonOrOrganizationType;


/**
 * 
 *             A container for supplementary data about the flight. This container does not capture 
 *             the complete set of elements described in ICAO Doc 4444 ITEM 19 "Supplementary Information"; 
 *             it only contains those elements that could not be modeled more logically in other 
 *             FIXM structures. [FIXM] 
 *          
 * 
 * <p>Java class for SupplementaryDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SupplementaryDataType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="pilotInCommand" type="{http://www.fixm.aero/base/4.1}PersonOrOrganizationType" minOccurs="0"/>
 *         &lt;element name="supplementaryDataSource" type="{http://www.fixm.aero/flight/4.1}SupplementaryDataSourceType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="fuelEndurance" type="{http://www.fixm.aero/base/4.1}DurationType" />
 *       &lt;attribute name="personsOnBoard" type="{http://www.fixm.aero/base/4.1}CountType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SupplementaryDataType", propOrder = {
    "pilotInCommand",
    "supplementaryDataSource"
})
@Entity(name = "SupplementaryDataType")
@Table(name = "SUPPLEMENTARYDATATYPE")
public class SupplementaryDataType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected PersonOrOrganizationType pilotInCommand;
    protected SupplementaryDataSourceType supplementaryDataSource;
    @XmlAttribute(name = "fuelEndurance")
    protected Duration fuelEndurance;
    @XmlAttribute(name = "personsOnBoard")
    protected Integer personsOnBoard;

    /**
     * Gets the value of the pilotInCommand property.
     * 
     * @return
     *     possible object is
     *     {@link PersonOrOrganizationType }
     *     
     */
    @ManyToOne(targetEntity = PersonOrOrganizationType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PILOTINCOMMAND_SUPPLEMENTARY_0")
    public PersonOrOrganizationType getPilotInCommand() {
        return pilotInCommand;
    }

    /**
     * Sets the value of the pilotInCommand property.
     * 
     * @param value
     *     allowed object is
     *     {@link PersonOrOrganizationType }
     *     
     */
    public void setPilotInCommand(PersonOrOrganizationType value) {
        this.pilotInCommand = value;
    }

    /**
     * Gets the value of the supplementaryDataSource property.
     * 
     * @return
     *     possible object is
     *     {@link SupplementaryDataSourceType }
     *     
     */
    @ManyToOne(targetEntity = SupplementaryDataSourceType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SUPPLEMENTARYDATASOURCE_SUPP_0")
    public SupplementaryDataSourceType getSupplementaryDataSource() {
        return supplementaryDataSource;
    }

    /**
     * Sets the value of the supplementaryDataSource property.
     * 
     * @param value
     *     allowed object is
     *     {@link SupplementaryDataSourceType }
     *     
     */
    public void setSupplementaryDataSource(SupplementaryDataSourceType value) {
        this.supplementaryDataSource = value;
    }

    /**
     * Gets the value of the fuelEndurance property.
     * 
     * @return
     *     possible object is
     *     {@link Duration }
     *     
     */
    @Transient
    public Duration getFuelEndurance() {
        return fuelEndurance;
    }

    /**
     * Sets the value of the fuelEndurance property.
     * 
     * @param value
     *     allowed object is
     *     {@link Duration }
     *     
     */
    public void setFuelEndurance(Duration value) {
        this.fuelEndurance = value;
    }

    /**
     * Gets the value of the personsOnBoard property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "PERSONSONBOARD", precision = 10, scale = 0)
    public Integer getPersonsOnBoard() {
        return personsOnBoard;
    }

    /**
     * Sets the value of the personsOnBoard property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPersonsOnBoard(Integer value) {
        this.personsOnBoard = value;
    }

    @Basic
    @Column(name = "FUELENDURANCEITEM", length = 127)
    public String getFuelEnduranceItem() {
        return XmlAdapterUtils.unmarshall(DurationAsString.class, this.getFuelEndurance());
    }

    public void setFuelEnduranceItem(String target) {
        setFuelEndurance(XmlAdapterUtils.marshall(DurationAsString.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SupplementaryDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SupplementaryDataType that = ((SupplementaryDataType) object);
        {
            PersonOrOrganizationType lhsPilotInCommand;
            lhsPilotInCommand = this.getPilotInCommand();
            PersonOrOrganizationType rhsPilotInCommand;
            rhsPilotInCommand = that.getPilotInCommand();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pilotInCommand", lhsPilotInCommand), LocatorUtils.property(thatLocator, "pilotInCommand", rhsPilotInCommand), lhsPilotInCommand, rhsPilotInCommand)) {
                return false;
            }
        }
        {
            SupplementaryDataSourceType lhsSupplementaryDataSource;
            lhsSupplementaryDataSource = this.getSupplementaryDataSource();
            SupplementaryDataSourceType rhsSupplementaryDataSource;
            rhsSupplementaryDataSource = that.getSupplementaryDataSource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplementaryDataSource", lhsSupplementaryDataSource), LocatorUtils.property(thatLocator, "supplementaryDataSource", rhsSupplementaryDataSource), lhsSupplementaryDataSource, rhsSupplementaryDataSource)) {
                return false;
            }
        }
        {
            Duration lhsFuelEndurance;
            lhsFuelEndurance = this.getFuelEndurance();
            Duration rhsFuelEndurance;
            rhsFuelEndurance = that.getFuelEndurance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fuelEndurance", lhsFuelEndurance), LocatorUtils.property(thatLocator, "fuelEndurance", rhsFuelEndurance), lhsFuelEndurance, rhsFuelEndurance)) {
                return false;
            }
        }
        {
            Integer lhsPersonsOnBoard;
            lhsPersonsOnBoard = this.getPersonsOnBoard();
            Integer rhsPersonsOnBoard;
            rhsPersonsOnBoard = that.getPersonsOnBoard();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "personsOnBoard", lhsPersonsOnBoard), LocatorUtils.property(thatLocator, "personsOnBoard", rhsPersonsOnBoard), lhsPersonsOnBoard, rhsPersonsOnBoard)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            PersonOrOrganizationType thePilotInCommand;
            thePilotInCommand = this.getPilotInCommand();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pilotInCommand", thePilotInCommand), currentHashCode, thePilotInCommand);
        }
        {
            SupplementaryDataSourceType theSupplementaryDataSource;
            theSupplementaryDataSource = this.getSupplementaryDataSource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplementaryDataSource", theSupplementaryDataSource), currentHashCode, theSupplementaryDataSource);
        }
        {
            Duration theFuelEndurance;
            theFuelEndurance = this.getFuelEndurance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fuelEndurance", theFuelEndurance), currentHashCode, theFuelEndurance);
        }
        {
            Integer thePersonsOnBoard;
            thePersonsOnBoard = this.getPersonsOnBoard();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "personsOnBoard", thePersonsOnBoard), currentHashCode, thePersonsOnBoard);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
