//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.flight;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.base.ExtensibleType;
import dev.ale.fdx.entity.base.RadioactivityType;


/**
 * 
 *             The XML sub-grouping element for Radioactive Materials. 
 *             
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;deprecated xmlns="http://www.w3.org/2001/XMLSchema" xmlns:fb="http://www.fixm.aero/base/4.1" xmlns:fx="http://www.fixm.aero/flight/4.1" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;&lt;deletionVersion&gt;5.0.0&lt;/deletionVersion&gt;&lt;deprecationVersion&gt;4.1.0&lt;/deprecationVersion&gt;&lt;rationale&gt;Change Request #25. Outcomes of ATMRPP/2 shows DG data element other than NOTOC items are not required in FIXM Core.&lt;/rationale&gt;&lt;replacement&gt;N/A&lt;/replacement&gt;&lt;/deprecated&gt;
 * </pre>
 * 
 * 
 * <p>Java class for RadionuclideType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RadionuclideType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="activity" type="{http://www.fixm.aero/base/4.1}RadioactivityType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="lowDispersibleMaterialIndicator" type="{http://www.fixm.aero/flight/4.1}MaterialDispersabilityType" />
 *       &lt;attribute name="physicalChemicalForm" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="radionuclideId">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.fixm.aero/base/4.1}CharacterStringType">
 *             &lt;pattern value="(UN)|(ID)|(NA)?\d{4}"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="radionuclideName" type="{http://www.fixm.aero/base/4.1}CharacterStringType" />
 *       &lt;attribute name="specialFormIndicator" type="{http://www.fixm.aero/flight/4.1}SpecialFormType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RadionuclideType", propOrder = {
    "activity"
})
@Entity(name = "RadionuclideType")
@Table(name = "RADIONUCLIDETYPE")
public class RadionuclideType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected RadioactivityType activity;
    @XmlAttribute(name = "lowDispersibleMaterialIndicator")
    protected MaterialDispersabilityType lowDispersibleMaterialIndicator;
    @XmlAttribute(name = "physicalChemicalForm")
    protected String physicalChemicalForm;
    @XmlAttribute(name = "radionuclideId")
    protected String radionuclideId;
    @XmlAttribute(name = "radionuclideName")
    protected String radionuclideName;
    @XmlAttribute(name = "specialFormIndicator")
    protected SpecialFormType specialFormIndicator;

    /**
     * Gets the value of the activity property.
     * 
     * @return
     *     possible object is
     *     {@link RadioactivityType }
     *     
     */
    @ManyToOne(targetEntity = RadioactivityType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ACTIVITY_RADIONUCLIDETYPE_HJ_0")
    public RadioactivityType getActivity() {
        return activity;
    }

    /**
     * Sets the value of the activity property.
     * 
     * @param value
     *     allowed object is
     *     {@link RadioactivityType }
     *     
     */
    public void setActivity(RadioactivityType value) {
        this.activity = value;
    }

    /**
     * Gets the value of the lowDispersibleMaterialIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link MaterialDispersabilityType }
     *     
     */
    @Basic
    @Column(name = "LOWDISPERSIBLEMATERIALINDICA_0", length = 255)
    @Enumerated(EnumType.STRING)
    public MaterialDispersabilityType getLowDispersibleMaterialIndicator() {
        return lowDispersibleMaterialIndicator;
    }

    /**
     * Sets the value of the lowDispersibleMaterialIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link MaterialDispersabilityType }
     *     
     */
    public void setLowDispersibleMaterialIndicator(MaterialDispersabilityType value) {
        this.lowDispersibleMaterialIndicator = value;
    }

    /**
     * Gets the value of the physicalChemicalForm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PHYSICALCHEMICALFORM", length = 4096)
    public String getPhysicalChemicalForm() {
        return physicalChemicalForm;
    }

    /**
     * Sets the value of the physicalChemicalForm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPhysicalChemicalForm(String value) {
        this.physicalChemicalForm = value;
    }

    /**
     * Gets the value of the radionuclideId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RADIONUCLIDEID", length = 4096)
    public String getRadionuclideId() {
        return radionuclideId;
    }

    /**
     * Sets the value of the radionuclideId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRadionuclideId(String value) {
        this.radionuclideId = value;
    }

    /**
     * Gets the value of the radionuclideName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RADIONUCLIDENAME", length = 4096)
    public String getRadionuclideName() {
        return radionuclideName;
    }

    /**
     * Sets the value of the radionuclideName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRadionuclideName(String value) {
        this.radionuclideName = value;
    }

    /**
     * Gets the value of the specialFormIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link SpecialFormType }
     *     
     */
    @Basic
    @Column(name = "SPECIALFORMINDICATOR", length = 255)
    @Enumerated(EnumType.STRING)
    public SpecialFormType getSpecialFormIndicator() {
        return specialFormIndicator;
    }

    /**
     * Sets the value of the specialFormIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpecialFormType }
     *     
     */
    public void setSpecialFormIndicator(SpecialFormType value) {
        this.specialFormIndicator = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RadionuclideType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final RadionuclideType that = ((RadionuclideType) object);
        {
            RadioactivityType lhsActivity;
            lhsActivity = this.getActivity();
            RadioactivityType rhsActivity;
            rhsActivity = that.getActivity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activity", lhsActivity), LocatorUtils.property(thatLocator, "activity", rhsActivity), lhsActivity, rhsActivity)) {
                return false;
            }
        }
        {
            MaterialDispersabilityType lhsLowDispersibleMaterialIndicator;
            lhsLowDispersibleMaterialIndicator = this.getLowDispersibleMaterialIndicator();
            MaterialDispersabilityType rhsLowDispersibleMaterialIndicator;
            rhsLowDispersibleMaterialIndicator = that.getLowDispersibleMaterialIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lowDispersibleMaterialIndicator", lhsLowDispersibleMaterialIndicator), LocatorUtils.property(thatLocator, "lowDispersibleMaterialIndicator", rhsLowDispersibleMaterialIndicator), lhsLowDispersibleMaterialIndicator, rhsLowDispersibleMaterialIndicator)) {
                return false;
            }
        }
        {
            String lhsPhysicalChemicalForm;
            lhsPhysicalChemicalForm = this.getPhysicalChemicalForm();
            String rhsPhysicalChemicalForm;
            rhsPhysicalChemicalForm = that.getPhysicalChemicalForm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "physicalChemicalForm", lhsPhysicalChemicalForm), LocatorUtils.property(thatLocator, "physicalChemicalForm", rhsPhysicalChemicalForm), lhsPhysicalChemicalForm, rhsPhysicalChemicalForm)) {
                return false;
            }
        }
        {
            String lhsRadionuclideId;
            lhsRadionuclideId = this.getRadionuclideId();
            String rhsRadionuclideId;
            rhsRadionuclideId = that.getRadionuclideId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "radionuclideId", lhsRadionuclideId), LocatorUtils.property(thatLocator, "radionuclideId", rhsRadionuclideId), lhsRadionuclideId, rhsRadionuclideId)) {
                return false;
            }
        }
        {
            String lhsRadionuclideName;
            lhsRadionuclideName = this.getRadionuclideName();
            String rhsRadionuclideName;
            rhsRadionuclideName = that.getRadionuclideName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "radionuclideName", lhsRadionuclideName), LocatorUtils.property(thatLocator, "radionuclideName", rhsRadionuclideName), lhsRadionuclideName, rhsRadionuclideName)) {
                return false;
            }
        }
        {
            SpecialFormType lhsSpecialFormIndicator;
            lhsSpecialFormIndicator = this.getSpecialFormIndicator();
            SpecialFormType rhsSpecialFormIndicator;
            rhsSpecialFormIndicator = that.getSpecialFormIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specialFormIndicator", lhsSpecialFormIndicator), LocatorUtils.property(thatLocator, "specialFormIndicator", rhsSpecialFormIndicator), lhsSpecialFormIndicator, rhsSpecialFormIndicator)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            RadioactivityType theActivity;
            theActivity = this.getActivity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activity", theActivity), currentHashCode, theActivity);
        }
        {
            MaterialDispersabilityType theLowDispersibleMaterialIndicator;
            theLowDispersibleMaterialIndicator = this.getLowDispersibleMaterialIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lowDispersibleMaterialIndicator", theLowDispersibleMaterialIndicator), currentHashCode, theLowDispersibleMaterialIndicator);
        }
        {
            String thePhysicalChemicalForm;
            thePhysicalChemicalForm = this.getPhysicalChemicalForm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "physicalChemicalForm", thePhysicalChemicalForm), currentHashCode, thePhysicalChemicalForm);
        }
        {
            String theRadionuclideId;
            theRadionuclideId = this.getRadionuclideId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "radionuclideId", theRadionuclideId), currentHashCode, theRadionuclideId);
        }
        {
            String theRadionuclideName;
            theRadionuclideName = this.getRadionuclideName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "radionuclideName", theRadionuclideName), currentHashCode, theRadionuclideName);
        }
        {
            SpecialFormType theSpecialFormIndicator;
            theSpecialFormIndicator = this.getSpecialFormIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specialFormIndicator", theSpecialFormIndicator), currentHashCode, theSpecialFormIndicator);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
