//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.base;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import dev.ale.fdx.entity.flight.StructuredPostalAddressType;


/**
 * 
 *             Information required to enable contact with the responsible person and/or organisation. 
 *              This model is derived from ISO19115-2003:Geographic Information- Metadata. [AIXM 
 *             5.1] 
 *          
 * 
 * <p>Java class for ContactInformationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ContactInformationType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="address" type="{http://www.fixm.aero/base/4.1}PostalAddressType" minOccurs="0"/>
 *         &lt;element name="onlineContact" type="{http://www.fixm.aero/base/4.1}OnlineContactType" maxOccurs="2000" minOccurs="0"/>
 *         &lt;element name="phoneFax" type="{http://www.fixm.aero/base/4.1}TelephoneContactType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" type="{http://www.fixm.aero/base/4.1}TextNameType" />
 *       &lt;attribute name="title" type="{http://www.fixm.aero/base/4.1}TextNameType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ContactInformationType", propOrder = {
    "address",
    "onlineContact",
    "phoneFax"
})
@XmlSeeAlso({
    StructuredPostalAddressType.class
})
@Entity(name = "ContactInformationType")
@Table(name = "CONTACTINFORMATIONTYPE")
public class ContactInformationType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected PostalAddressType address;
    protected List<OnlineContactType> onlineContact;
    protected TelephoneContactType phoneFax;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "title")
    protected String title;

    /**
     * Gets the value of the address property.
     * 
     * @return
     *     possible object is
     *     {@link PostalAddressType }
     *     
     */
    @ManyToOne(targetEntity = PostalAddressType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ADDRESS_CONTACTINFORMATIONTY_0")
    public PostalAddressType getAddress() {
        return address;
    }

    /**
     * Sets the value of the address property.
     * 
     * @param value
     *     allowed object is
     *     {@link PostalAddressType }
     *     
     */
    public void setAddress(PostalAddressType value) {
        this.address = value;
    }

    /**
     * Gets the value of the onlineContact property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the onlineContact property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOnlineContact().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OnlineContactType }
     * 
     * 
     */
    @OneToMany(targetEntity = OnlineContactType.class, cascade = {
        CascadeType.ALL
    }, fetch = FetchType.LAZY)
    @LazyCollection(LazyCollectionOption.FALSE)
    @JoinColumn(name = "ONLINECONTACT_CONTACTINFORMA_0")
    public List<OnlineContactType> getOnlineContact() {
        if (onlineContact == null) {
            onlineContact = new ArrayList<OnlineContactType>();
        }
        return this.onlineContact;
    }

    /**
     * 
     * 
     */
    public void setOnlineContact(List<OnlineContactType> onlineContact) {
        this.onlineContact = onlineContact;
    }

    /**
     * Gets the value of the phoneFax property.
     * 
     * @return
     *     possible object is
     *     {@link TelephoneContactType }
     *     
     */
    @ManyToOne(targetEntity = TelephoneContactType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PHONEFAX_CONTACTINFORMATIONT_0")
    public TelephoneContactType getPhoneFax() {
        return phoneFax;
    }

    /**
     * Sets the value of the phoneFax property.
     * 
     * @param value
     *     allowed object is
     *     {@link TelephoneContactType }
     *     
     */
    public void setPhoneFax(TelephoneContactType value) {
        this.phoneFax = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NAME_", length = 60)
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TITLE", length = 60)
    public String getTitle() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitle(String value) {
        this.title = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ContactInformationType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ContactInformationType that = ((ContactInformationType) object);
        {
            PostalAddressType lhsAddress;
            lhsAddress = this.getAddress();
            PostalAddressType rhsAddress;
            rhsAddress = that.getAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        {
            List<OnlineContactType> lhsOnlineContact;
            lhsOnlineContact = (((this.onlineContact!= null)&&(!this.onlineContact.isEmpty()))?this.getOnlineContact():null);
            List<OnlineContactType> rhsOnlineContact;
            rhsOnlineContact = (((that.onlineContact!= null)&&(!that.onlineContact.isEmpty()))?that.getOnlineContact():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "onlineContact", lhsOnlineContact), LocatorUtils.property(thatLocator, "onlineContact", rhsOnlineContact), lhsOnlineContact, rhsOnlineContact)) {
                return false;
            }
        }
        {
            TelephoneContactType lhsPhoneFax;
            lhsPhoneFax = this.getPhoneFax();
            TelephoneContactType rhsPhoneFax;
            rhsPhoneFax = that.getPhoneFax();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneFax", lhsPhoneFax), LocatorUtils.property(thatLocator, "phoneFax", rhsPhoneFax), lhsPhoneFax, rhsPhoneFax)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            String lhsTitle;
            lhsTitle = this.getTitle();
            String rhsTitle;
            rhsTitle = that.getTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            PostalAddressType theAddress;
            theAddress = this.getAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        {
            List<OnlineContactType> theOnlineContact;
            theOnlineContact = (((this.onlineContact!= null)&&(!this.onlineContact.isEmpty()))?this.getOnlineContact():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "onlineContact", theOnlineContact), currentHashCode, theOnlineContact);
        }
        {
            TelephoneContactType thePhoneFax;
            thePhoneFax = this.getPhoneFax();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneFax", thePhoneFax), currentHashCode, thePhoneFax);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTitle), currentHashCode, theTitle);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
