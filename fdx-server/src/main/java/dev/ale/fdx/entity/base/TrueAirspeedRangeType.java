//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.28 at 02:58:02 PM ICT 
//


package dev.ale.fdx.entity.base;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 *             The airspeed that can be expressed as a range between a lower and upper bound. 
 *          
 * 
 * <p>Java class for TrueAirspeedRangeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TrueAirspeedRangeType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/4.1}ExtensibleType">
 *       &lt;sequence>
 *         &lt;element name="lowerSpeed" type="{http://www.fixm.aero/base/4.1}TrueAirspeedType" minOccurs="0"/>
 *         &lt;element name="upperSpeed" type="{http://www.fixm.aero/base/4.1}TrueAirspeedType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TrueAirspeedRangeType", propOrder = {
    "lowerSpeed",
    "upperSpeed"
})
@Entity(name = "TrueAirspeedRangeType")
@Table(name = "TRUEAIRSPEEDRANGETYPE")
public class TrueAirspeedRangeType
    extends ExtensibleType
    implements Equals, HashCode
{

    protected TrueAirspeedType lowerSpeed;
    protected TrueAirspeedType upperSpeed;

    /**
     * Gets the value of the lowerSpeed property.
     * 
     * @return
     *     possible object is
     *     {@link TrueAirspeedType }
     *     
     */
    @ManyToOne(targetEntity = TrueAirspeedType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LOWERSPEED_TRUEAIRSPEEDRANGE_0")
    public TrueAirspeedType getLowerSpeed() {
        return lowerSpeed;
    }

    /**
     * Sets the value of the lowerSpeed property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueAirspeedType }
     *     
     */
    public void setLowerSpeed(TrueAirspeedType value) {
        this.lowerSpeed = value;
    }

    /**
     * Gets the value of the upperSpeed property.
     * 
     * @return
     *     possible object is
     *     {@link TrueAirspeedType }
     *     
     */
    @ManyToOne(targetEntity = TrueAirspeedType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "UPPERSPEED_TRUEAIRSPEEDRANGE_0")
    public TrueAirspeedType getUpperSpeed() {
        return upperSpeed;
    }

    /**
     * Sets the value of the upperSpeed property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueAirspeedType }
     *     
     */
    public void setUpperSpeed(TrueAirspeedType value) {
        this.upperSpeed = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TrueAirspeedRangeType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TrueAirspeedRangeType that = ((TrueAirspeedRangeType) object);
        {
            TrueAirspeedType lhsLowerSpeed;
            lhsLowerSpeed = this.getLowerSpeed();
            TrueAirspeedType rhsLowerSpeed;
            rhsLowerSpeed = that.getLowerSpeed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lowerSpeed", lhsLowerSpeed), LocatorUtils.property(thatLocator, "lowerSpeed", rhsLowerSpeed), lhsLowerSpeed, rhsLowerSpeed)) {
                return false;
            }
        }
        {
            TrueAirspeedType lhsUpperSpeed;
            lhsUpperSpeed = this.getUpperSpeed();
            TrueAirspeedType rhsUpperSpeed;
            rhsUpperSpeed = that.getUpperSpeed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "upperSpeed", lhsUpperSpeed), LocatorUtils.property(thatLocator, "upperSpeed", rhsUpperSpeed), lhsUpperSpeed, rhsUpperSpeed)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            TrueAirspeedType theLowerSpeed;
            theLowerSpeed = this.getLowerSpeed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lowerSpeed", theLowerSpeed), currentHashCode, theLowerSpeed);
        }
        {
            TrueAirspeedType theUpperSpeed;
            theUpperSpeed = this.getUpperSpeed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "upperSpeed", theUpperSpeed), currentHashCode, theUpperSpeed);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
